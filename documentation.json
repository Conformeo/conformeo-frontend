{
    "pipes": [],
    "interfaces": [
        {
            "name": "ActionItem",
            "id": "interface-ActionItem-95009a950492d953e6620c6734413518c44144463685972712e2c7a9ed7f254ca5ecfb90c63db2d130b29e1fded77d048570453e3eef7b0b5825eaaa1f34da9a",
            "file": "src/app/models/action-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ActionItem {\n  description: string;\n  done: boolean;\n}",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "done",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Alert",
            "id": "interface-Alert-b0cc9f155e4ee2362079060005897cdac351fdd8eacd683de5ca8b16ceb5a75334d996f1b067cf8991aaf0075e5503ec27cc8e2cfccf4679d908701fadb56b4f",
            "file": "src/app/models/alert.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Alert {\n  title: string;\n  message: string;\n}",
            "properties": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Certification",
            "id": "interface-Certification-e3909a91bbac71bfef99ec3d157b307bde44ce281cb9032458ee0109072eb833f31fd690a5254d07deba0996805e40b0b3c5092497809d87f13393a67e7bddb8",
            "file": "src/app/models/certification.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Certification {\n  name: string;\n  validUntil: string;     // YYYY-MM\n  status: 'VALID'|'RENEW'|'NOT_OBTAINED';\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"VALID\" | \"RENEW\" | \"NOT_OBTAINED\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "validUntil",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Checklist",
            "id": "interface-Checklist-1ebe8a6324028d63cce065945453578e10c724970073b2eb5850cbf678a25900654afd86149ce3d493352647479dec72946bc9e00429ecb9f6b8d6c4f5b0ea69",
            "file": "src/app/core/models/checklist.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ChecklistItem {\n  /** Identifiant unique de l'item */\n  id: number;\n\n  /** Libellé de l'item */\n  label: string;\n\n  /** Statut cochée */\n  is_done: boolean;\n}\n\nexport interface Checklist {\n  /** Identifiant unique de la checklist */\n  id: number;\n\n  /** Nom ou titre de la checklist */\n  name: string;\n\n  /** Description facultative */\n  description?: string;\n\n  /** Date de création */\n  createdAt?: string; // ISO date string\n\n  /** Date de dernière modification */\n  updatedAt?: string;\n\n  /** Éléments de la checklist */\n  items?: ChecklistItem[];\n}\n",
            "properties": [
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "<p>Date de création</p>\n",
                    "line": 23,
                    "rawdescription": "\nDate de création"
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "<p>Description facultative</p>\n",
                    "line": 20,
                    "rawdescription": "\nDescription facultative"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Identifiant unique de la checklist</p>\n",
                    "line": 14,
                    "rawdescription": "\nIdentifiant unique de la checklist"
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChecklistItem[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "<p>Éléments de la checklist</p>\n",
                    "line": 29,
                    "rawdescription": "\nÉléments de la checklist"
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Nom ou titre de la checklist</p>\n",
                    "line": 17,
                    "rawdescription": "\nNom ou titre de la checklist"
                },
                {
                    "name": "updatedAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "<p>Date de dernière modification</p>\n",
                    "line": 26,
                    "rawdescription": "\nDate de dernière modification"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ChecklistItem",
            "id": "interface-ChecklistItem-1ebe8a6324028d63cce065945453578e10c724970073b2eb5850cbf678a25900654afd86149ce3d493352647479dec72946bc9e00429ecb9f6b8d6c4f5b0ea69",
            "file": "src/app/core/models/checklist.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ChecklistItem {\n  /** Identifiant unique de l'item */\n  id: number;\n\n  /** Libellé de l'item */\n  label: string;\n\n  /** Statut cochée */\n  is_done: boolean;\n}\n\nexport interface Checklist {\n  /** Identifiant unique de la checklist */\n  id: number;\n\n  /** Nom ou titre de la checklist */\n  name: string;\n\n  /** Description facultative */\n  description?: string;\n\n  /** Date de création */\n  createdAt?: string; // ISO date string\n\n  /** Date de dernière modification */\n  updatedAt?: string;\n\n  /** Éléments de la checklist */\n  items?: ChecklistItem[];\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Identifiant unique de l&#39;item</p>\n",
                    "line": 3,
                    "rawdescription": "\nIdentifiant unique de l'item"
                },
                {
                    "name": "is_done",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Statut cochée</p>\n",
                    "line": 9,
                    "rawdescription": "\nStatut cochée"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Libellé de l&#39;item</p>\n",
                    "line": 6,
                    "rawdescription": "\nLibellé de l'item"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DashboardStat",
            "id": "interface-DashboardStat-c8bae0453d003596b4e5f8daebdf45da04cc2ecab722169f21356c75647e77d0644f0650b565c38df9be872ac4fb00c0e0947558e91f15858d3f0ea768952912",
            "file": "src/app/models/dashboard-stat.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DashboardStat {\n  label:  string;\n  value:  string | number;\n  variant?: 'risk';         // ← rouge\n  icon?:   string;          // ← nom d’icône Lucide (optionnel)\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Equipment",
            "id": "interface-Equipment-3ede73bcb77f0bf550732e7ce4bd92466f7540b0340ffe81383956600e004f4717b258ebf8f3cf50cb50ffbffd761bccc4413bd688abb921fb6c496b0d3a735f",
            "file": "src/app/models/equipment.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Equipment {\n  name: string;\n  siteName: string;\n  validUntil: string;     // MM/YYYY\n  status: 'OK'|'EXPIRED';\n}",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "siteName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"OK\" | \"EXPIRED\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "validUntil",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "EsgMetrics",
            "id": "interface-EsgMetrics-8ec5059f609ca43752bf2c5a0a5d341853a8e303d99245fc61fbf0c3c013284930aa00ee2bcb170a4a4703767a1cee04ba9b0c98106396bd97198462c4e74b9b",
            "file": "src/app/models/esg-metrics.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface EsgMetrics {\n  siteName: string;\n  debrisT: number;\n  scrapT: number;\n  co2t: number;\n}",
            "properties": [
                {
                    "name": "co2t",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "debrisT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "scrapT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "siteName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FaqItem",
            "id": "interface-FaqItem-380033404af987a01fedb69cd47595386b1b5f2826c2e01585a4fbf2e2edaee0df8c607b8398b93bfa0e4759bc6073dfc6a13f1aac1221245bf2698b78359dfa",
            "file": "src/app/models/faq-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FaqItem {\n  question: string;\n  answer: string;\n}",
            "properties": [
                {
                    "name": "answer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FireExtinguisher",
            "id": "interface-FireExtinguisher-bc33a504ac5ee5282eca29f8d99e0ec9b0c392bf88bb2bc07c06c69bfbc573fa3045a6cfe4a608ae8ce4cdbd2fd9d16204bd011b34244531bd62b551ccfed5e9",
            "file": "src/app/models/fire-extinguisher.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FireExtinguisher {\n  location: string;\n  lastControl: string;    // YYYY-MM\n  nextControl: string;    // YYYY-MM\n  status: 'OK'|'TO_SCHEDULE';\n}",
            "properties": [
                {
                    "name": "lastControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "nextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"OK\" | \"TO_SCHEDULE\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Inspection",
            "id": "interface-Inspection-71bd10e43d41816cee35bd476c651f701e90530ea08a2d62adff1790c3efee017c5ee6383b62f2c64671c3def3295d2d4f73504dcda93608506bf6c3db40b6af",
            "file": "src/app/models/inspection.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Inspection {\n  siteName: string;\n  date: string;           // DD/MM/YY\n  type: string;\n  status: 'COMPLIANT'|'TO_FIX'|'PLANNED';\n}",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "siteName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"COMPLIANT\" | \"TO_FIX\" | \"PLANNED\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Item",
            "id": "interface-Item-cc4e1c6de02509f27e145cf67708dc0c75a84cd5b83a2507ef3359dee1c18d7dffa99795da98d1ba2e8d451c749f9c06fe7567b61fca7108367225d5af3b4f42",
            "file": "src/app/core/services/checklist-item.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from './auth.service';\n\n/** ───────── Interfaces de données ───────── */\n\nexport interface Item {\n  id:        number;\n  label:     string;\n  is_done:   boolean;\n  created_at?: string;\n  updated_at?: string;\n}\n\n/** ───────── Service ───────── */\n\n@Injectable({ providedIn: 'root' })\nexport class ChecklistItemService {\n\n  private http   = inject(HttpClient);\n  private auth   = inject(AuthService);\n  private apiUrl = environment.apiUrl;\n\n  /** Conteneur-état local pour le composant détail */\n  private _items$ = new BehaviorSubject<Item[]>([]);\n  readonly  items$ = this._items$.asObservable();\n\n  /** -------- Helpers -------- */\n  private headers(): HttpHeaders {\n    return new HttpHeaders({\n      Authorization: `Bearer ${ this.auth.getToken() ?? '' }`\n    });\n  }\n\n  /** -------- CRUD -------- */\n\n  /** Liste tous les items d’une checklist */\n  list(checklistId: number): Observable<Item[]> {\n    return this.http.get<Item[]>(`${this.apiUrl}/checklists/${checklistId}/items`,\n      { headers: this.headers() }\n    ).pipe(tap(list => this._items$.next(list)));\n  }\n\n  /** Ajoute un nouvel item */\n  add(checklistId: number, label: string): Observable<Item> {\n    return this.http.post<Item>(\n      `${this.apiUrl}/checklists/${checklistId}/items`,\n      { label },\n      { headers: this.headers() }\n    ).pipe(\n      tap(it => this._items$.next([ ...this._items$.value, it ]))\n    );\n  }\n\n  /** Met à jour un item */\n  update(checklistId: number, itemId: number, changes: Partial<Item>): Observable<Item> {\n    return this.http.put<Item>(\n      `${this.apiUrl}/checklists/${checklistId}/items/${itemId}`,\n      changes,\n      { headers: this.headers() }\n    ).pipe(\n      tap(updated => {\n        const arr = this._items$.value.map(i => i.id === itemId ? updated : i);\n        this._items$.next(arr);\n      })\n    );\n  }\n\n  /** Supprime un item */\n  remove(checklistId: number, itemId: number): Observable<void> {\n    return this.http.delete<void>(\n      `${this.apiUrl}/checklists/${checklistId}/items/${itemId}`,\n      { headers: this.headers() }\n    ).pipe(\n      tap(() => this._items$.next(this._items$.value.filter(i => i.id !== itemId)))\n    );\n  }\n}\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "is_done",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>───────── Interfaces de données ─────────</p>\n",
            "rawdescription": "\n───────── Interfaces de données ─────────",
            "methods": [],
            "extends": []
        },
        {
            "name": "LoginResponse",
            "id": "interface-LoginResponse-e05bc5aaa81423fb53f2ae36e7f69e209909e2fb64b6a8369a6d490ee400f22520d9c10dbb889a1bb6bb03f147251ccb2de18bb86e9f357a8941a092deb5f06b",
            "file": "src/app/core/services/auth.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\nexport interface LoginResponse {\n  access_token: string;\n  token_type: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private http = inject(HttpClient);\n\n  private apiUrl = environment.apiUrl;\n\n  login(email: string, password: string): Observable<LoginResponse> {\n    const headers = new HttpHeaders({'Content-Type': 'application/x-www-form-urlencoded'});\n    const body = new URLSearchParams();\n    body.set('username', email);\n    body.set('password', password);\n    return this.http.post<LoginResponse>(`${this.apiUrl}/auth/login`, body.toString(), { headers }).pipe(\n      tap(response => {\n        localStorage.setItem('access_token', response.access_token);\n      })\n    );\n  }\n\n  logout(): void {\n    localStorage.removeItem('access_token');\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem('access_token');\n  }\n\n  isLoggedIn(): boolean {\n    return !!localStorage.getItem('access_token');\n  }\n}",
            "properties": [
                {
                    "name": "access_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "token_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Partner",
            "id": "interface-Partner-1a840e84790609d5dc4b856e151a9296839ee8be8aaddf9b3531fb5581669b5d908a7069d0b117e19ac031f1ac46439e1b2ff606142fd14835db9185836bb952",
            "file": "src/app/models/partner.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Partner {\n  name: string;\n  service: string;\n  nextDate?: string;      // DD/MM/YYYY ou undefined\n}",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "nextDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Report",
            "id": "interface-Report-ac7929a4f6ca2e2db1671d9883222cbb2de505c39636b27c615d41e31234e9f1311570850b5098f179f51addca420a1504e7ad449cb807a03c9a8ba87516226d",
            "file": "src/app/models/report.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Report {\n  label: string;\n  type: 'PDF'|'CSV'|'XLSX';\n}",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"PDF\" | \"CSV\" | \"XLSX\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ScoreboardEntry",
            "id": "interface-ScoreboardEntry-56c2c6ac7f189501960f7f693191604cf53b981cf55cc296d706b23388c48b4d089cc358486714819a95b5ee82233592a2eb9f52bab61b40c9b49da6d0c891ab",
            "file": "src/app/models/scoreboard-entry.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ScoreboardEntry {\n  rank: number;\n  siteName: string;\n  points: number;\n  badge: 'Or'|'Argent'|'Bronze';\n}",
            "properties": [
                {
                    "name": "badge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Or\" | \"Argent\" | \"Bronze\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "points",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "rank",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "siteName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Site",
            "id": "interface-Site-6ae8658675b25756ee4a65cb299acc5c45c5150cdeb8a909a0c664aef203ed7652834e29e6958ab74a84dd9ad8117b82575edcab86f10ac3c27dc2da74454936",
            "file": "src/app/models/site.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Site {\n  id: string;\n  name: string;\n  address: string;\n  nextControl: string;    // DD/MM/YY\n  score: number;          // en pourcentage\n}",
            "properties": [
                {
                    "name": "address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "nextControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "score",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TrainingModule",
            "id": "interface-TrainingModule-1534d2091d414d55fe723bf43a6588177f1480e12957378106a71570d2fe5771e1449756278019f8aa5321692a826693420c34a03f097e0afcbdbfc014645692",
            "file": "src/app/models/training.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TrainingModule {\n  title: string;\n  duration: string;\n  nextSession?: string;   // DD/MM/YYYY ou “à la demande”\n}",
            "properties": [
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "nextSession",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Worker",
            "id": "interface-Worker-0185e4a4ea347024019f87132980f9d99d11aed1ccc2e1aa73651645c74452ab6230c74eba5ec3361742343293550dedf8ea8812009ad3f3f7b94e01d18ac0ba",
            "file": "src/app/models/worker.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Worker {\n  fullName: string;\n  certification: string;\n  expiryDate?: string;    // MM/YYYY ou undefined\n  status: 'VALID'|'RENEW'|'SCHEDULED';\n}",
            "properties": [
                {
                    "name": "certification",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "expiryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"VALID\" | \"RENEW\" | \"SCHEDULED\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "ActionsService",
            "id": "injectable-ActionsService-8e6480345b798d9310e0c4b2605660fdaf5877f5d2607f923d0182481e325eba33e2047b94db64d99a5de06106893defcb676ebdf72a18ff97b1eb741cd17ade",
            "file": "src/app/features/actions/actions.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionsService {\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AiService",
            "id": "injectable-AiService-8c9f3e83423a993972e13f506808fa50aef815ee92d58f4c708eecc1e9fd8710503c8a471c7d286ced24be344931640a9c06eb621cde92dbd67ea404e5a4c2b3",
            "file": "src/app/features/ai/ai.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AiService {\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AlertsService",
            "id": "injectable-AlertsService-659beb046dcb6bcdbc506131afc4b5b288b3e731e4d857e9064fbe558afb9e996c4644fcd74ec936934649eeed8b84020b48b66935abe440e4340902fa1d0f46",
            "file": "src/app/features/alerts/alerts.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertsService {\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ApiService",
            "id": "injectable-ApiService-726b14267b2224b9b3cb68f67749390bf777f11ee62be0549062514ffee33ad21925867d66af7a7572c67f02ff2a6fc364dc40ec683be57f8991432e728817ca",
            "file": "src/app/core/api.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-e05bc5aaa81423fb53f2ae36e7f69e209909e2fb64b6a8369a6d490ee400f22520d9c10dbb889a1bb6bb03f147251ccb2de18bb86e9f357a8941a092deb5f06b",
            "file": "src/app/core/services/auth.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LoginResponse>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\nexport interface LoginResponse {\n  access_token: string;\n  token_type: string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private http = inject(HttpClient);\n\n  private apiUrl = environment.apiUrl;\n\n  login(email: string, password: string): Observable<LoginResponse> {\n    const headers = new HttpHeaders({'Content-Type': 'application/x-www-form-urlencoded'});\n    const body = new URLSearchParams();\n    body.set('username', email);\n    body.set('password', password);\n    return this.http.post<LoginResponse>(`${this.apiUrl}/auth/login`, body.toString(), { headers }).pipe(\n      tap(response => {\n        localStorage.setItem('access_token', response.access_token);\n      })\n    );\n  }\n\n  logout(): void {\n    localStorage.removeItem('access_token');\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem('access_token');\n  }\n\n  isLoggedIn(): boolean {\n    return !!localStorage.getItem('access_token');\n  }\n}",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ChecklistItemService",
            "id": "injectable-ChecklistItemService-cc4e1c6de02509f27e145cf67708dc0c75a84cd5b83a2507ef3359dee1c18d7dffa99795da98d1ba2e8d451c749f9c06fe7567b61fca7108367225d5af3b4f42",
            "file": "src/app/core/services/checklist-item.service.ts",
            "properties": [
                {
                    "name": "_items$",
                    "defaultValue": "new BehaviorSubject<Item[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Conteneur-état local pour le composant détail</p>\n",
                    "line": 27,
                    "rawdescription": "\nConteneur-état local pour le composant détail",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "apiUrl",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "auth",
                    "defaultValue": "inject(AuthService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "items$",
                    "defaultValue": "this._items$.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Item>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAjoute un nouvel item",
                    "description": "<p>Ajoute un nouvel item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "headers",
                    "args": [],
                    "optional": false,
                    "returnType": "HttpHeaders",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n-------- Helpers --------",
                    "description": "<p>-------- Helpers --------</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Item[]>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nListe tous les items d’une checklist",
                    "description": "<p>Liste tous les items d’une checklist</p>\n",
                    "jsdoctags": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "itemId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSupprime un item",
                    "description": "<p>Supprime un item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "itemId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "itemId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "changes",
                            "type": "Partial<Item>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Item>",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nMet à jour un item",
                    "description": "<p>Met à jour un item</p>\n",
                    "jsdoctags": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "itemId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "changes",
                            "type": "Partial<Item>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>───────── Service ─────────</p>\n",
            "rawdescription": "\n───────── Service ─────────",
            "sourceCode": "import { inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from './auth.service';\n\n/** ───────── Interfaces de données ───────── */\n\nexport interface Item {\n  id:        number;\n  label:     string;\n  is_done:   boolean;\n  created_at?: string;\n  updated_at?: string;\n}\n\n/** ───────── Service ───────── */\n\n@Injectable({ providedIn: 'root' })\nexport class ChecklistItemService {\n\n  private http   = inject(HttpClient);\n  private auth   = inject(AuthService);\n  private apiUrl = environment.apiUrl;\n\n  /** Conteneur-état local pour le composant détail */\n  private _items$ = new BehaviorSubject<Item[]>([]);\n  readonly  items$ = this._items$.asObservable();\n\n  /** -------- Helpers -------- */\n  private headers(): HttpHeaders {\n    return new HttpHeaders({\n      Authorization: `Bearer ${ this.auth.getToken() ?? '' }`\n    });\n  }\n\n  /** -------- CRUD -------- */\n\n  /** Liste tous les items d’une checklist */\n  list(checklistId: number): Observable<Item[]> {\n    return this.http.get<Item[]>(`${this.apiUrl}/checklists/${checklistId}/items`,\n      { headers: this.headers() }\n    ).pipe(tap(list => this._items$.next(list)));\n  }\n\n  /** Ajoute un nouvel item */\n  add(checklistId: number, label: string): Observable<Item> {\n    return this.http.post<Item>(\n      `${this.apiUrl}/checklists/${checklistId}/items`,\n      { label },\n      { headers: this.headers() }\n    ).pipe(\n      tap(it => this._items$.next([ ...this._items$.value, it ]))\n    );\n  }\n\n  /** Met à jour un item */\n  update(checklistId: number, itemId: number, changes: Partial<Item>): Observable<Item> {\n    return this.http.put<Item>(\n      `${this.apiUrl}/checklists/${checklistId}/items/${itemId}`,\n      changes,\n      { headers: this.headers() }\n    ).pipe(\n      tap(updated => {\n        const arr = this._items$.value.map(i => i.id === itemId ? updated : i);\n        this._items$.next(arr);\n      })\n    );\n  }\n\n  /** Supprime un item */\n  remove(checklistId: number, itemId: number): Observable<void> {\n    return this.http.delete<void>(\n      `${this.apiUrl}/checklists/${checklistId}/items/${itemId}`,\n      { headers: this.headers() }\n    ).pipe(\n      tap(() => this._items$.next(this._items$.value.filter(i => i.id !== itemId)))\n    );\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ChecklistService",
            "id": "injectable-ChecklistService-4da8ce827428f0c655448a3c26a71f51c1e1cdc26cffa09b7588c4af45df2d8b3db813639c4f13ab6b1bb5fdbbf89d850902305257712787afdf1c3323ed9865",
            "file": "src/app/core/services/checklist.service.ts",
            "properties": [
                {
                    "name": "_store",
                    "defaultValue": "new BehaviorSubject<Checklist[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "api",
                    "defaultValue": "`${environment.apiUrl}/checklists`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Checklist>",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addItem",
                    "args": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ChecklistItem>",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "all",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Checklist[]>",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "dto",
                            "type": "Partial<Checklist>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Checklist>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dto",
                            "type": "Partial<Checklist>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteItem",
                    "args": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "itemId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "itemId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fetch",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Checklist[]>",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Checklist>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Checklist[]>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "rename",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Checklist>",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "Partial<Checklist>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Checklist>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "Partial<Checklist>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateItem",
                    "args": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "itemId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dto",
                            "type": "Partial<ChecklistItem>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ChecklistItem>",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "checklistId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "itemId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dto",
                            "type": "Partial<ChecklistItem>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Checklist, ChecklistItem } from '../models/checklist.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ChecklistService {\n  private readonly api = `${environment.apiUrl}/checklists`;\n  private readonly http = inject(HttpClient);\n\n  // Cache comme avant...\n  private readonly _store = new BehaviorSubject<Checklist[]>([]);\n\n  /* --------------------------------------------------------------------------\n   *  -- Accès CRUD sur les checklists ---------------------------------------\n   * ------------------------------------------------------------------------*/\n\n  list(): Observable<Checklist[]> {\n    return this.http.get<Checklist[]>(this.api);\n  }\n\n  getById(id: number): Observable<Checklist> {\n    return this.http.get<Checklist>(`${this.api}/${id}`);\n  }\n\n  create(dto: Partial<Checklist>): Observable<Checklist> {\n    return this.http.post<Checklist>(this.api, dto);\n  }\n\n  update(id: number, dto: Partial<Checklist>): Observable<Checklist> {\n    return this.http.put<Checklist>(`${this.api}/${id}`, dto);\n  }\n\n  delete(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.api}/${id}`);\n  }\n\n  /* --------------------------------------------------------------------------\n   *  -- Accès CRUD sur les items d’une checklist ----------------------------\n   * ------------------------------------------------------------------------*/\n\n  addItem(checklistId: number, dto: { label: string }): Observable<ChecklistItem> {\n    return this.http.post<ChecklistItem>(`${this.api}/${checklistId}/items`, dto);\n  }\n\n  updateItem(checklistId: number, itemId: number, dto: Partial<ChecklistItem>): Observable<ChecklistItem> {\n    return this.http.put<ChecklistItem>(`${this.api}/${checklistId}/items/${itemId}`, dto);\n  }\n\n  deleteItem(checklistId: number, itemId: number): Observable<void> {\n    return this.http.delete<void>(`${this.api}/${checklistId}/items/${itemId}`);\n  }\n\n  /* --------------------------------------------------------------------------\n   *  -- Cache réactif (facultatif) ------------------------------------------\n   * ------------------------------------------------------------------------*/\n\n  all(): Observable<Checklist[]> {\n    return this._store.asObservable();\n  }\n\n  fetch(): Observable<Checklist[]> {\n    return this.list().pipe(tap(cs => this._store.next(cs)));\n  }\n\n  add(name: string): Observable<Checklist> {\n    return this.create({ name }).pipe(\n      tap(newCl => this._store.next([...this._store.value, newCl]))\n    );\n  }\n\n  rename(id: number, name: string): Observable<Checklist> {\n    return this.update(id, { name }).pipe(\n      tap(updated => {\n        const next = this._store.value.map(c => c.id === id ? updated : c);\n        this._store.next(next);\n      })\n    );\n  }\n\n  remove(id: number): Observable<void> {\n    return this.delete(id).pipe(\n      tap(() => this._store.next(this._store.value.filter(c => c.id !== id)))\n    );\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "CompanyService",
            "id": "injectable-CompanyService-253ee1c1cc4790556234438fc85f8012a277a5fd2ebeb860b317f8a563cbb95e0009be14e0a6fb0de58a5cf8a0a1394b5a3beaf2e88c045dc1a728e94a2bb4ec",
            "file": "src/app/features/company/company.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCertifications",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Certification[]>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getExtinguishers",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<FireExtinguisher[]>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable }         from '@angular/core';\nimport { Observable, of }     from 'rxjs';\nimport { FireExtinguisher }   from '../../models/fire-extinguisher.model';\nimport { Certification }      from '../../models/certification.model';\n\n@Injectable({ providedIn: 'root' })\nexport class CompanyService {\n  getExtinguishers(): Observable<FireExtinguisher[]> {\n    return of([\n      { location: 'Hall accueil',   lastControl: '2024-09', nextControl: '2025-09', status: 'OK' },\n      { location: 'Atelier nord',   lastControl: '2024-03', nextControl: '2025-03', status: 'TO_SCHEDULE' },\n      { location: 'Parking sous-sol', lastControl: '2023-11', nextControl: '2024-11', status: 'OK' }\n    ]);\n  }\n\n  getCertifications(): Observable<Certification[]> {\n    return of([\n      { name: 'ISO 9001', validUntil: '2026-05', status: 'VALID' },\n      { name: 'ISO 14001', validUntil: '2024-12', status: 'RENEW' },\n      { name: 'OHSAS 18001', validUntil: '—', status: 'NOT_OBTAINED' }\n    ]);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "DashboardService",
            "id": "injectable-DashboardService-c805bbe2cb7e62e1f18c5f6bdf82fe0f62a4b0b6e46dc8b8fed9141c0f6ca53280eeab461f7e6e13347015782a25a8042db6184c10e70671f51a90003d67a1c4",
            "file": "src/app/features/dashboard/dashboard.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getStats",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<DashboardStat[]>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable }     from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { DashboardStat }  from '../../models/dashboard-stat.model';\n\n@Injectable({ providedIn: 'root' })\nexport class DashboardService {\n  getStats(): Observable<DashboardStat[]> {\n    return of([\n      { label: 'Sites',            value: 24,        icon: 'home' },\n      { label: 'Contrôles à venir', value: 5, variant: 'risk', icon: 'alert-triangle' },\n      { label: 'Inspections OK',   value: '92 %',    icon: 'check-circle' },  // 👈\n      { label: 'Actions en cours', value: 7, variant: 'risk', icon: 'alert-triangle' }\n    ]);\n  }\n}",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "EquipmentsService",
            "id": "injectable-EquipmentsService-b9c1f39e1f800427df0118e9187eeca63c65b4fb95f96aaa4fb5b82ff5c1a042b57db5fac3eecf28a8f2c41c3f4ba3de2bd28148491892833174cd03ea7395b0",
            "file": "src/app/features/equipments/equipments.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EquipmentsService {\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "EsgService",
            "id": "injectable-EsgService-914c4d1dc311a724bcc869a9f155e8848967d77d1bb29c458e4334e34adc5574c256e329a24713ccac1cc313d9afb5bc2177ac255523dc7536c06b6d5f2a1403",
            "file": "src/app/features/esg/esg.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EsgService {\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "InspectionsService",
            "id": "injectable-InspectionsService-b8c84ac0d50507ed6a9dbb32376cd3280be9ea17f28ff9f5d6de0d6a401eb7d845d08d1f94aec176113fb3c3b9be1c6ebc0662d74e052765cbd0ef2b2f1d84db",
            "file": "src/app/features/inspections/inspections.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InspectionsService {\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "PartnersService",
            "id": "injectable-PartnersService-ec5b5b27703d7f8eff109a3c764edb6c217e620ba30daff1940e349f1dc313bd02c8a0126bab8699fa3b6ca02c23eaa89a8439c8703ddaaaf591a29d08044c5e",
            "file": "src/app/features/partners/partners.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PartnersService {\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ReportsService",
            "id": "injectable-ReportsService-237ce782c78396184ca07ad2dfd64efcb13b64796eec3be42cf907ed110333974b588dbf8825cec6ec3adcf484a60ea9207eb8ee223afad62b76479cf04944f4",
            "file": "src/app/features/reports/reports.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportsService {\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ScoreboardService",
            "id": "injectable-ScoreboardService-dcc5e2e8773a35d0d604244766ae99750ee83319ea450d8c854e71652d2b3c5911d2cdaef2004ad5a3a276a8f875b99c50e0cb3bcba6c4b256553ba9689fac1b",
            "file": "src/app/features/scoreboard/scoreboard.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScoreboardService {\n\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SettingsService",
            "id": "injectable-SettingsService-3ca558c57ab0aba0be34386ec8a3c69fe435fce75c8e7a29d039b7c6e4eec2d1f9801820bf92a58d37644633715543050451a3f8deedcd076ddf9fd805761211",
            "file": "src/app/features/settings/settings.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SitesService",
            "id": "injectable-SitesService-4f36dc34b3cd9cfd64b5f70211f58deb04af6571d93fcb73dcb45a22a0445f605768b407abd0cdc0239f81c7c01037c098e5fcc1b9a71b02239736100764718a",
            "file": "src/app/features/sites/sites.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'/api/sites'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Site[]>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable }      from '@angular/core';\nimport { HttpClient }      from '@angular/common/http';\nimport { Observable }      from 'rxjs';\nimport { Site }            from '../../models/site.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SitesService {\n  private apiUrl = '/api/sites';\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<Site[]> {\n    return this.http.get<Site[]>(this.apiUrl);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SupportService",
            "id": "injectable-SupportService-ec9266ebdbb999f91a27fdca83ab4784aeaddd09d624c8040c8532ec0e4db00aa0897d254c0fe039deef4e78b49986e48553664546c3a2ae35fcb829372dbdea",
            "file": "src/app/features/support/support.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupportService {\n\n\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TitleService",
            "id": "injectable-TitleService-22b03d9ba3bdb84ddc97d2ce12634e6f4e783442c36dd10b123a03070883f202f590a202624e9648321453c1c434e584ecb78214547949068a679d37e84d9f40",
            "file": "src/app/core/services/title.service.ts",
            "properties": [
                {
                    "name": "title$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class TitleService {\n  readonly title$: Observable<string>;\n\n  constructor(router: Router, route: ActivatedRoute) {\n    this.title$ = router.events.pipe(\n      filter(e => e instanceof NavigationEnd),\n      map(() => {\n        let r = route.firstChild;\n        while (r?.firstChild) r = r.firstChild;\n        return r?.snapshot.data['title'] ?? '';\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "TrainingService",
            "id": "injectable-TrainingService-ba08e6d134b7bb8c48763b060a594c73a811722f95750ef156a39f5f057348a03d30c1f21d391c58713e637cceff923739ed2e4bd7e37e8f557943226e6d573c",
            "file": "src/app/features/training/training.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrainingService {\n\n \n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "WorkersService",
            "id": "injectable-WorkersService-c84018ff6438a125bfa387fe56857579e7d9f978a3839057b0fcd7d4f5cd48ebed27f92558a42413b40d411d16c38f20a56f8878db17d9fbd439ca698ad620a8",
            "file": "src/app/features/workers/workers.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkersService {\n\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ActionListItemComponent",
            "id": "component-ActionListItemComponent-af8501fd622b61e454aeb53bbf56a9892e614dac945f8da6ebb5aadaa8e7877cdf4e302ac17916b60f59cb5d58bbf4545bae172dd43b26329c39fd99f89483ae",
            "file": "src/app/features/actions/components/action-list-item/action-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-action-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./action-list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-action-list-item',\n  imports: [],\n  templateUrl: './action-list-item.component.html',\n  styleUrl: './action-list-item.component.scss'\n})\nexport class ActionListItemComponent {\n\n}\n",
            "styleUrl": "./action-list-item.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>action-list-item works!</p>\n"
        },
        {
            "name": "ActionsPageComponent",
            "id": "component-ActionsPageComponent-3cc6c7e6450330c318789f9465450387c814ff1cf77fb017d4e49f19b2a14709fd4b20a121ea4ace49af029d15c088b1a4251bb284d18a7450efa6b0965d7bfc",
            "file": "src/app/features/actions/pages/actions-page/actions-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-actions-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./actions-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-actions-page',\n  imports: [],\n  templateUrl: './actions-page.component.html',\n  styleUrl: './actions-page.component.scss'\n})\nexport class ActionsPageComponent {\n\n}\n",
            "styleUrl": "./actions-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>actions-page works!</p>\n"
        },
        {
            "name": "AiChatComponent",
            "id": "component-AiChatComponent-c93fe48b31ff596720bceae4446b111f5d048e661c4b933d2ea94c99f93bfb18a96eb7cc89f81497bd8c60df21436dc31c08942ccdbdc96f824d3fa2ef02720b",
            "file": "src/app/features/ai/components/ai-chat/ai-chat.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ai-chat",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ai-chat.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-ai-chat',\n  imports: [],\n  templateUrl: './ai-chat.component.html',\n  styleUrl: './ai-chat.component.scss'\n})\nexport class AiChatComponent {\n\n}\n",
            "styleUrl": "./ai-chat.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>ai-chat works!</p>\n"
        },
        {
            "name": "AiPageComponent",
            "id": "component-AiPageComponent-469935996ce52c5dc77cc731d073f18aa3ee8201cfe6644e068a0f791a0f23a2c2cea1c7f11e35e86460becc1b851e015df34ed61ecbef2eb9cd505a27df385f",
            "file": "src/app/features/ai/pages/ai-page/ai-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ai-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ai-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-ai-page',\n  imports: [],\n  templateUrl: './ai-page.component.html',\n  styleUrl: './ai-page.component.scss'\n})\nexport class AiPageComponent {\n\n}\n",
            "styleUrl": "./ai-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>ai-page works!</p>\n"
        },
        {
            "name": "AiUploadComponent",
            "id": "component-AiUploadComponent-6c192ac3b6cdd4a0465061e9f6a676a984d44db6305650403df4c8689a2a07d1833e4ed9a434e5c943dcd45fb9ccaa14c9a4b3629acf8f9dc8d599fd2c115daf",
            "file": "src/app/features/ai/components/ai-upload/ai-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ai-upload",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ai-upload.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-ai-upload',\n  imports: [],\n  templateUrl: './ai-upload.component.html',\n  styleUrl: './ai-upload.component.scss'\n})\nexport class AiUploadComponent {\n\n}\n",
            "styleUrl": "./ai-upload.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>ai-upload works!</p>\n"
        },
        {
            "name": "AlertCardComponent",
            "id": "component-AlertCardComponent-512b9799dfeacb71202b757c09000e4ff859b10a1826d6e2e9b4ad6f0a5df43c66ac136218915e4f95bfaf073c06a87d46744aa44804192d90c2d5b6adb34b41",
            "file": "src/app/features/alerts/components/alert-card/alert-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-alert-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./alert-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alert-card',\n  imports: [],\n  templateUrl: './alert-card.component.html',\n  styleUrl: './alert-card.component.scss'\n})\nexport class AlertCardComponent {\n\n}\n",
            "styleUrl": "./alert-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>alert-card works!</p>\n"
        },
        {
            "name": "AlertsPageComponent",
            "id": "component-AlertsPageComponent-6bd2d7395e5c8927617f258d6db7b02aae7c664aea8bec4de5572f1b6d0f0c5f04739aa3179cbc40aa507570d4df44044ed4670b218d54b0c6fc7140c3915a72",
            "file": "src/app/features/alerts/pages/alerts-page/alerts-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-alerts-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./alerts-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alerts-page',\n  imports: [],\n  templateUrl: './alerts-page.component.html',\n  styleUrl: './alerts-page.component.scss'\n})\nexport class AlertsPageComponent {\n\n}\n",
            "styleUrl": "./alerts-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>alerts-page works!</p>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-59d490a6558c836bd8c85581c2e1b361a1923dc1a15873b5da693553dff9cfd99d3c170327492243ad40f0de738a491d3bc0dfc9017a5146762d3116e00b2b02",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Conformeo Frontend'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'Conformeo Frontend';\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "AppShellComponent",
            "id": "component-AppShellComponent-105dc080dbb03370362fd88fa68291b7f7bc3ba18775dfef411e7bbdd7e83c36b91d148a83f58e3754b90752092183d8ee70bf70db8a409ca9d05e9f1c5386ad",
            "file": "src/app/core/shell/app-shell/app-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shell",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-shell.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                },
                {
                    "name": "IconsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { TitleService } from '../../services/title.service';   // chemin à ajuster\nimport { Observable } from 'rxjs';\nimport {\n  RouterModule,\n  RouterLinkActive,\n  RouterOutlet,\n  RouterLink,\n} from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { IconsModule }  from '../../../icons/icons.module';\n\n@Component({\n  selector: 'app-shell',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    RouterOutlet,\n    RouterLink,\n    RouterLinkActive,\n    IconsModule,\n  ],\n  templateUrl: './app-shell.component.html',\n  styleUrl: './app-shell.component.scss',\n})\nexport class AppShellComponent {\n  title$: Observable<string>;\n\n  constructor(private titleSvc: TitleService) {\n    this.title$ = this.titleSvc.title$;\n  }\n\n}\n",
            "styleUrl": "./app-shell.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "titleSvc",
                        "type": "TitleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "titleSvc",
                        "type": "TitleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<!-- Wrapper flex: sidebar + main -->\n<div class=\"flex h-screen bg-slate-50\">\n\n  <!-- ===== Sidebar ===== -->\n  <aside class=\"w-60 shrink-0 bg-slate-900 text-slate-200 flex flex-col\">\n    <!-- Logo -->\n    <div class=\"h-16 flex items-center px-6 text-xl font-bold\">\n      <span class=\"text-white\">Conforméo</span><span class=\"text-cyan-400\"> BTP+</span>\n    </div>\n\n    <!-- Menu -->\n    <nav class=\"flex-1 overflow-y-auto py-2 space-y-1 text-sm\">\n      <a\n        routerLink=\"/dashboard\"\n        routerLinkActive=\"bg-slate-800 text-white\"\n        class=\"flex items-center px-6 py-2 hover:bg-slate-800 transition\">\n        <lucide-icon name=\"layout-dashboard\" class=\"mr-2\" size=\"16\"></lucide-icon>\n        Tableau de bord\n      </a>\n\n      <a routerLink=\"/company\" routerLinkActive=\"bg-slate-800 text-white\"\n         class=\"flex items-center px-6 py-2 hover:bg-slate-800 transition\">\n        <lucide-icon name=\"briefcase\" class=\"mr-2\" size=\"16\"></lucide-icon>\n        Entreprise\n      </a>\n\n      <!-- Ajoutez ici d’autres liens vers vos feature-modules -->\n      <a routerLink=\"/sites\" routerLinkActive=\"bg-slate-800 text-white\"\n         class=\"flex items-center px-6 py-2 hover:bg-slate-800 transition\">\n        <lucide-icon name=\"map-pin\" class=\"mr-2\" size=\"16\"></lucide-icon>\n        Chantiers\n      </a>\n\n      <a routerLink=\"/alerts\" routerLinkActive=\"bg-slate-800 text-white\"\n         class=\"flex items-center px-6 py-2 hover:bg-slate-800 transition\">\n        <lucide-icon name=\"bell\" class=\"mr-2\" size=\"16\"></lucide-icon>\n        Alertes\n      </a>\n\n      <!-- … -->\n    </nav>\n\n    <!-- Footer badge -->\n    <div class=\"py-3 text-center text-xs text-slate-400\">© 2025 Conforméo</div>\n  </aside>\n\n  <!-- ===== Main column ===== -->\n  <div class=\"flex-1 flex flex-col overflow-hidden\">\n\n    <!-- Top bar -->\n    <header class=\"h-16 shrink-0 flex items-center justify-between px-6 shadow bg-white\">\n      <h1 class=\"text-lg font-semibold\">{{ title$ | async | titlecase }}</h1>\n      <div class=\"w-8 h-8 rounded-full bg-slate-300\"></div>\n    </header>\n\n    <!-- Routable content -->\n    <main class=\"flex-1 overflow-y-auto p-6\">\n      <router-outlet></router-outlet>\n    </main>\n\n  </div>\n</div>\n"
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-5ac5cd92b76b88c36d24e553b98e19c373d14028db8e30339ff797683d09e2f056f1c5f40744028eab79cb202d56913cc449b09668a87e97fafeac0abc29d9e4",
            "file": "src/app/shared/ui/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-badge',\n  imports: [],\n  templateUrl: './badge.component.html',\n  styleUrl: './badge.component.scss'\n})\nexport class BadgeComponent {\n\n}\n",
            "styleUrl": "./badge.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>badge works!</p>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-ce19506802dd0b2590052c0a2ee8f9076f3e70842bbe0318b5135cbfcba9abaee4f93fccb6b6b2dbc82f4755851768859049db946174146b04af72965311576c-1",
            "file": "src/app/shared/ui/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  imports: [],\n  templateUrl: './button.component.html',\n  styleUrl: './button.component.scss'\n})\nexport class ButtonComponent {\n\n}\n",
            "styleUrl": "./button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<!-- shared/ui/button/button.component.html -->\n<button [disabled]=\"disabled\">\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-eaf75719b4348f235d5080b02c3326fc1653742d0af45e67f9552c8c9c723ccadaae2f7803ab1d093f47926bba7e9bd7cf1b81a0a62839f5f405f355c517ade9",
            "file": "src/app/shared/ui/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  imports: [],\n  templateUrl: './card.component.html',\n  styleUrl: './card.component.scss'\n})\nexport class CardComponent {\n\n}\n",
            "styleUrl": "./card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>card works!</p>\n"
        },
        {
            "name": "CertificationTableComponent",
            "id": "component-CertificationTableComponent-6b749db782772ba96a779e43604d31c8c576df5dff489fed2bb84e0c5d40117e56dfa1abed7522a817e82554ed190a7a18cdac46390ef9718955372e2546e10f",
            "file": "src/app/features/company/components/certification-table/certification-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-certification-table",
            "styleUrls": [],
            "styles": [],
            "template": "<app-table-wrapper>\n  <table class=\"w-full text-sm\">\n    <thead class=\"bg-slate-100\">\n      <tr>\n        <th>Certification</th>\n        <th>Valide jusqu’au</th>\n        <th class=\"text-center\">Statut</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let c of rows\" class=\"border-b\">\n        <td>{{ c.name }}</td>\n        <td>{{ c.validUntil }}</td>\n        <td class=\"text-center\">\n          <lucide-icon name=\"check\"\n                       *ngIf=\"c.status==='VALID'\"\n                       class=\"text-green-600 inline\" size=\"16\">\n          </lucide-icon>\n\n          <lucide-icon name=\"alert-triangle\"\n                       *ngIf=\"c.status==='RENEW'\"\n                       class=\"text-yellow-500 inline\" size=\"16\">\n          </lucide-icon>\n\n          <lucide-icon name=\"x\"\n                       *ngIf=\"c.status==='NOT_OBTAINED'\"\n                       class=\"text-red-600 inline\" size=\"16\">\n          </lucide-icon>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</app-table-wrapper>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "Certification[] | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TableWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "IconsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule }     from '@angular/common';\n\nimport { TableWrapperComponent }   from '../../../../shared/table-wrapper/table-wrapper.component';\nimport { Certification }           from '../../../../models/certification.model';\nimport { IconsModule }  from '../../../../icons/icons.module';\n\n@Component({\n  selector: 'app-certification-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TableWrapperComponent,\n    IconsModule\n  ],\n  template: `\n    <app-table-wrapper>\n      <table class=\"w-full text-sm\">\n        <thead class=\"bg-slate-100\">\n          <tr>\n            <th>Certification</th>\n            <th>Valide jusqu’au</th>\n            <th class=\"text-center\">Statut</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let c of rows\" class=\"border-b\">\n            <td>{{ c.name }}</td>\n            <td>{{ c.validUntil }}</td>\n            <td class=\"text-center\">\n              <lucide-icon name=\"check\"\n                           *ngIf=\"c.status==='VALID'\"\n                           class=\"text-green-600 inline\" size=\"16\">\n              </lucide-icon>\n\n              <lucide-icon name=\"alert-triangle\"\n                           *ngIf=\"c.status==='RENEW'\"\n                           class=\"text-yellow-500 inline\" size=\"16\">\n              </lucide-icon>\n\n              <lucide-icon name=\"x\"\n                           *ngIf=\"c.status==='NOT_OBTAINED'\"\n                           class=\"text-red-600 inline\" size=\"16\">\n              </lucide-icon>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </app-table-wrapper>\n  `\n})\nexport class CertificationTableComponent {\n  @Input() data: Certification[] | null = [];\n  get rows() { return this.data ?? []; }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "rows": {
                    "name": "rows",
                    "getSignature": {
                        "name": "rows",
                        "type": "",
                        "returnType": "",
                        "line": 54
                    }
                }
            }
        },
        {
            "name": "ChecklistDetailComponent",
            "id": "component-ChecklistDetailComponent-4d5ffe54f4bcd4208ed3990421f0a0f62b0cd38d71d77c4815ffbe97cfb439fb688063369f2883eb4c5d8124c73634c955d15829b5f89772dc4d56cfda347ed4",
            "file": "src/app/features/checklists/checklist-detail/checklist-detail/checklist-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checklist-detail",
            "styleUrls": [
                "./checklist-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checklist-detail.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checklist",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Checklist",
                    "indexKey": "",
                    "optional": true,
                    "description": "<p>Données de la checklist</p>\n",
                    "line": 20,
                    "rawdescription": "\nDonnées de la checklist"
                },
                {
                    "name": "cid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Identifiant de la checklist</p>\n",
                    "line": 17,
                    "rawdescription": "\nIdentifiant de la checklist"
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChecklistItem[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Liste des items de la checklist</p>\n",
                    "line": 23,
                    "rawdescription": "\nListe des items de la checklist"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Nouveau label d&#39;item</p>\n",
                    "line": 26,
                    "rawdescription": "\nNouveau label d'item"
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "service",
                    "defaultValue": "inject(ChecklistService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "item",
                            "type": "ChecklistItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ChecklistItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [
                        {
                            "name": "item",
                            "type": "ChecklistItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ChecklistItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { Checklist, ChecklistItem } from '../../../../core/models/checklist.model';\nimport { ChecklistService } from '../../../../core/services/checklist.service';\n\n@Component({\n  selector: 'app-checklist-detail',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterModule],\n  templateUrl: './checklist-detail.component.html',\n  styleUrls: ['./checklist-detail.component.scss']\n})\nexport class ChecklistDetailComponent implements OnInit {\n  /** Identifiant de la checklist */\n  cid!: number;\n\n  /** Données de la checklist */\n  checklist?: Checklist;\n\n  /** Liste des items de la checklist */\n  items: ChecklistItem[] = [];\n\n  /** Nouveau label d'item */\n  label = '';\n\n  private readonly route = inject(ActivatedRoute);\n  private readonly service = inject(ChecklistService);\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.cid = Number(params.get('id'));\n      // Récupère la checklist avec ses items\n      this.service.getById(this.cid).subscribe(cl => {\n        this.checklist = cl;\n        this.items = cl.items || [];\n      });\n    });\n  }\n\n  toggle(item: ChecklistItem): void {\n    item.is_done = !item.is_done;\n    this.service.updateItem(this.cid, item.id, { is_done: item.is_done }).subscribe();\n  }\n\n  delete(item: ChecklistItem): void {\n    this.service.deleteItem(this.cid, item.id).subscribe(() => {\n      this.items = this.items.filter(i => i.id !== item.id);\n    });\n  }\n\n  addItem(): void {\n    if (!this.label.trim()) return;\n    this.service.addItem(this.cid, { label: this.label }).subscribe(newItem => {\n      this.items.push(newItem);\n      this.label = '';\n    });\n  }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"variables\" as *;\n",
                    "styleUrl": "./checklist-detail.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<h2 *ngIf=\"checklist\">Checklist : {{ checklist.name }}</h2>\n\n<ul>\n  <li *ngFor=\"let it of items\">\n    <label>\n      <input type=\"checkbox\" [checked]=\"it.is_done\" (change)=\"toggle(it)\">\n      {{ it.label }}\n    </label>\n    <button (click)=\"delete(it)\">🗑️</button>\n  </li>\n</ul>\n\n<form (ngSubmit)=\"addItem()\">\n  <input [(ngModel)]=\"label\" name=\"label\" placeholder=\"Nouvel item…\">\n  <button type=\"submit\">Ajouter</button>\n</form>\n"
        },
        {
            "name": "ChecklistFormComponent",
            "id": "component-ChecklistFormComponent-c420bb69fbfd970a4ed01ba7fb0689af4ddbdf06c4b19d111e7d98801ea7419b38c0dc97c67cf87f095056a0cab662e818813f6dfc348dc1dfaebba235d6eac3",
            "file": "src/app/features/checklists/checklist-form/checklist-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checklist-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checklist-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-checklist-form',\n  imports: [],\n  templateUrl: './checklist-form.component.html',\n  styleUrl: './checklist-form.component.scss'\n})\nexport class ChecklistFormComponent {\n\n}\n",
            "styleUrl": "./checklist-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>checklist-form works!</p>\n"
        },
        {
            "name": "ChecklistListComponent",
            "id": "component-ChecklistListComponent-8b886543a7392c2d67bc2514f9363c6eff077c6dc0bab7be133af9c0191afc301ff5bcd4ae3603796a20912e02b7b58927de4127285670aeb98bf8bd887a2ecc",
            "file": "src/app/features/checklists/checklist-list/checklist-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checklist-list",
            "styleUrls": [
                "./checklist-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checklist-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checklists",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Checklist[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "service",
                    "defaultValue": "inject(ChecklistService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { Checklist } from '../../../core/models/checklist.model';\nimport { ChecklistService } from '../../../core/services/checklist.service';\n\n@Component({\n  selector: 'app-checklist-list',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './checklist-list.component.html',\n  styleUrls: ['./checklist-list.component.scss']\n})\nexport class ChecklistListComponent implements OnInit {\n  checklists: Checklist[] = [];\n  private readonly service = inject(ChecklistService);\n\n  ngOnInit(): void {\n    this.service.list().subscribe(data => this.checklists = data);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"variables\" as *;\n",
                    "styleUrl": "./checklist-list.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ul>\n  <li *ngFor=\"let c of checklists\">\n    <a [routerLink]=\"['/checklists', c.id]\">{{ c.name }}</a>\n  </li>\n</ul>\n"
        },
        {
            "name": "ChecklistsPageComponent",
            "id": "component-ChecklistsPageComponent-2daf0c0f30cdd8ec6414089b0978e20ba8821fce1512472cda79c05e03925bde02a094e26bb7acb73e7889cbc4f826f4e7e3555468d163497a9fd4e252494a3d",
            "file": "src/app/features/checklists/checklists-page/checklists-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checklists-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checklists-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-checklists-page',\n  imports: [],\n  templateUrl: './checklists-page.component.html',\n  styleUrl: './checklists-page.component.scss'\n})\nexport class ChecklistsPageComponent {\n\n}\n",
            "styleUrl": "./checklists-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>checklists-page works!</p>\n"
        },
        {
            "name": "CompanyPageComponent",
            "id": "component-CompanyPageComponent-804c5bf8aac2e15031a16c54fc67d72a73a3cde7e20f6058ad02a21464659b4141ea4958b43edc878fd395348f555f36677c2b3063017285d4c83885c9cfcaa2",
            "file": "src/app/features/company/pages/company-page/company-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-company-page",
            "styleUrls": [],
            "styles": [],
            "template": "<h1 class=\"text-2xl font-semibold mb-4\">Sécurité & certifications</h1>\n\n<div class=\"grid md:grid-cols-2 gap-6\">\n  <!-- Extincteurs -->\n  <section>\n    <h2 class=\"font-medium mb-2\">Extincteurs</h2>\n    <ng-container *ngIf=\"exts$ | async as exts; else extSkeleton\">\n      <app-extinguisher-table [data]=\"exts\"/>\n    </ng-container>\n    <ng-template #extSkeleton><app-skeleton height=\"8rem\"></app-skeleton></ng-template>\n  </section>\n\n  <!-- Certifs -->\n  <section>\n    <h2 class=\"font-medium mb-2\">Certifications</h2>\n    <ng-container *ngIf=\"certs$ | async as certs; else certSkeleton\">\n      <app-certification-table [data]=\"certs\"/>\n    </ng-container>\n    <ng-template #certSkeleton><app-skeleton height=\"8rem\"></app-skeleton></ng-template>\n  </section>\n</div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "certs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Certification[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "exts$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<FireExtinguisher[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SkeletonComponent",
                    "type": "component"
                },
                {
                    "name": "ExtinguisherTableComponent",
                    "type": "component"
                },
                {
                    "name": "CertificationTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { CompanyService } from '../../company.service';\nimport { FireExtinguisher } from '../../../../models/fire-extinguisher.model';\nimport { Certification } from '../../../../models/certification.model';\nimport { ExtinguisherTableComponent } from '../../components/extinguisher-table/extinguisher-table.component';\nimport { CertificationTableComponent } from '../../components/certification-table/certification-table.component';\nimport { SkeletonComponent } from '../../../../shared/skeleton/skeleton/skeleton.component';\n\n@Component({\n  selector: 'app-company-page',\n  standalone: true,\n  imports: [\n    CommonModule,\n    SkeletonComponent,\n    ExtinguisherTableComponent,\n    CertificationTableComponent,\n  ],\n  template: `\n    <h1 class=\"text-2xl font-semibold mb-4\">Sécurité & certifications</h1>\n\n    <div class=\"grid md:grid-cols-2 gap-6\">\n      <!-- Extincteurs -->\n      <section>\n        <h2 class=\"font-medium mb-2\">Extincteurs</h2>\n        <ng-container *ngIf=\"exts$ | async as exts; else extSkeleton\">\n          <app-extinguisher-table [data]=\"exts\"/>\n        </ng-container>\n        <ng-template #extSkeleton><app-skeleton height=\"8rem\"></app-skeleton></ng-template>\n      </section>\n\n      <!-- Certifs -->\n      <section>\n        <h2 class=\"font-medium mb-2\">Certifications</h2>\n        <ng-container *ngIf=\"certs$ | async as certs; else certSkeleton\">\n          <app-certification-table [data]=\"certs\"/>\n        </ng-container>\n        <ng-template #certSkeleton><app-skeleton height=\"8rem\"></app-skeleton></ng-template>\n      </section>\n    </div>`,\n})\nexport class CompanyPageComponent implements OnInit {\n  exts$!: Observable<FireExtinguisher[]>;\n  certs$!: Observable<Certification[]>;\n\n  constructor(private service: CompanyService) {}\n\n  ngOnInit() {\n    this.exts$  = this.service.getExtinguishers();\n    this.certs$ = this.service.getCertifications();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "CompanyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "CompanyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "DashboardPageComponent",
            "id": "component-DashboardPageComponent-64a3088a996954d481c3c6ae9a8df8b8cc55e7f395648283db8d1914d515ee7b695e037014807327330c71fd8736cfd8a37aa4b2006fb72c8f70097d61751d92",
            "file": "src/app/features/dashboard/pages/dashboard-page/dashboard-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard-page",
            "styleUrls": [],
            "styles": [],
            "template": "<h1 class=\"text-2xl font-semibold mb-4\">Tableau de bord</h1>\n\n<div class=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n  <app-stat-card\n    *ngFor=\"let stat of stats$ | async\"\n    [stat]=\"stat\">\n  </app-stat-card>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "stats$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<DashboardStat[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "StatCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { CommonModule }       from '@angular/common';\nimport { Observable }         from 'rxjs';\nimport { DashboardStat }      from '../../../../models/dashboard-stat.model';\nimport { DashboardService }   from '../../dashboard.service';\nimport { StatCardComponent }  from '../../components/stat-card/stat-card.component';\n\n@Component({\n  selector: 'app-dashboard-page',\n  standalone: true,\n  imports: [CommonModule, StatCardComponent],\n  template: `\n    <h1 class=\"text-2xl font-semibold mb-4\">Tableau de bord</h1>\n\n    <div class=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      <app-stat-card\n        *ngFor=\"let stat of stats$ | async\"\n        [stat]=\"stat\">\n      </app-stat-card>\n    </div>\n  `\n})\nexport class DashboardPageComponent implements OnInit {\n  stats$!: Observable<DashboardStat[]>;\n\n  constructor(private dashboardService: DashboardService) {}\n\n  ngOnInit() {\n    this.stats$ = this.dashboardService.getStats();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dashboardService",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "dashboardService",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "EquipmentsPageComponent",
            "id": "component-EquipmentsPageComponent-1915d6f06ac8c7635f2809866b0f57c9eac65d247be8b0f498f119284c42e1b4cf7e4a8ec17ff83528d0a214246bc4e7823c2b9c59722f8a1a1f23f2284c8ce8",
            "file": "src/app/features/equipments/pages/equipments-page/equipments-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-equipments-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./equipments-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-equipments-page',\n  imports: [],\n  templateUrl: './equipments-page.component.html',\n  styleUrl: './equipments-page.component.scss'\n})\nexport class EquipmentsPageComponent {\n\n}\n",
            "styleUrl": "./equipments-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>equipments-page works!</p>\n"
        },
        {
            "name": "EquipmentTableComponent",
            "id": "component-EquipmentTableComponent-c746a51a8c5790a3bbbd29b843a1d0bcbca85b2c97edf4f09c2362cb95ab2a17dd8085d90b4f45c02ff923602464ec5e41c3d859e2b4852e64e86054a2619514",
            "file": "src/app/features/equipments/components/equipment-table/equipment-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-equipment-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./equipment-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-equipment-table',\n  imports: [],\n  templateUrl: './equipment-table.component.html',\n  styleUrl: './equipment-table.component.scss'\n})\nexport class EquipmentTableComponent {\n\n}\n",
            "styleUrl": "./equipment-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>equipment-table works!</p>\n"
        },
        {
            "name": "EsgPageComponent",
            "id": "component-EsgPageComponent-4575047f2d9807b1215655c1b2d394ceccde773b5a5b47c602e57ea878b2fd9d3b9186500f64477528efd10a5849f710ed327fbaf566a56bc528f8230f11ce63",
            "file": "src/app/features/esg/pages/esg-page/esg-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-esg-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./esg-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-esg-page',\n  imports: [],\n  templateUrl: './esg-page.component.html',\n  styleUrl: './esg-page.component.scss'\n})\nexport class EsgPageComponent {\n\n}\n",
            "styleUrl": "./esg-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>esg-page works!</p>\n"
        },
        {
            "name": "EsgTableComponent",
            "id": "component-EsgTableComponent-d03f29a6e7cf98375617e770703b38095a7d55eb6fe094101e0313ed4c55697af25175dec9fef034dda909f65498a05482bea828b1c0c1051ba1cc1256a16d37",
            "file": "src/app/features/esg/components/esg-table/esg-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-esg-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./esg-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-esg-table',\n  imports: [],\n  templateUrl: './esg-table.component.html',\n  styleUrl: './esg-table.component.scss'\n})\nexport class EsgTableComponent {\n\n}\n",
            "styleUrl": "./esg-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>esg-table works!</p>\n"
        },
        {
            "name": "ExtinguisherTableComponent",
            "id": "component-ExtinguisherTableComponent-9bf93074e720ed67a37c95a0b1004f770495dfcc72ea334929ebf8382df3cfb0672cc0194ecf618de09d2ab8a75cf50117b74727726efa833f8b92df1773ea59",
            "file": "src/app/features/company/components/extinguisher-table/extinguisher-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-extinguisher-table",
            "styleUrls": [],
            "styles": [],
            "template": "<app-table-wrapper>\n  <table class=\"w-full text-sm\">\n    <thead class=\"bg-slate-100\">\n      <tr>\n        <th>Emplacement</th>\n        <th>Dernier</th>\n        <th>Prochain</th>\n        <th class=\"text-center\">Statut</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of rows\" class=\"border-b\">\n        <td>{{ e.location }}</td>\n        <td>{{ e.lastControl }}</td>\n        <td>{{ e.nextControl }}</td>\n        <td class=\"text-center\">\n          <lucide-icon name=\"check\"\n                       *ngIf=\"e.status==='OK'\"\n                       class=\"text-green-600 inline\" size=\"16\">\n          </lucide-icon>\n          <lucide-icon name=\"clock\"\n                       *ngIf=\"e.status==='TO_SCHEDULE'\"\n                       class=\"text-yellow-500 inline\" size=\"16\">\n          </lucide-icon>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</app-table-wrapper>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "FireExtinguisher[] | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TableWrapperComponent",
                    "type": "component"
                },
                {
                    "name": "IconsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule }     from '@angular/common';\n\nimport { TableWrapperComponent }   from '../../../../shared/table-wrapper/table-wrapper.component';\nimport { FireExtinguisher }        from '../../../../models/fire-extinguisher.model';\nimport { IconsModule }  from '../../../../icons/icons.module';\n\n@Component({\n  selector: 'app-extinguisher-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TableWrapperComponent,\n    IconsModule        // <-- seule dépendance icônes\n  ],\n  template: `\n    <app-table-wrapper>\n      <table class=\"w-full text-sm\">\n        <thead class=\"bg-slate-100\">\n          <tr>\n            <th>Emplacement</th>\n            <th>Dernier</th>\n            <th>Prochain</th>\n            <th class=\"text-center\">Statut</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let e of rows\" class=\"border-b\">\n            <td>{{ e.location }}</td>\n            <td>{{ e.lastControl }}</td>\n            <td>{{ e.nextControl }}</td>\n            <td class=\"text-center\">\n              <lucide-icon name=\"check\"\n                           *ngIf=\"e.status==='OK'\"\n                           class=\"text-green-600 inline\" size=\"16\">\n              </lucide-icon>\n              <lucide-icon name=\"clock\"\n                           *ngIf=\"e.status==='TO_SCHEDULE'\"\n                           class=\"text-yellow-500 inline\" size=\"16\">\n              </lucide-icon>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </app-table-wrapper>\n  `\n})\nexport class ExtinguisherTableComponent {\n  @Input() data: FireExtinguisher[] | null = [];\n  get rows() { return this.data ?? []; }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "rows": {
                    "name": "rows",
                    "getSignature": {
                        "name": "rows",
                        "type": "",
                        "returnType": "",
                        "line": 50
                    }
                }
            }
        },
        {
            "name": "FaqListComponent",
            "id": "component-FaqListComponent-39e8fd219c81cb184466f76a7d16f7559c7b3da73e252e9144c6c293fe2fe58475b6fa6adb34b217d7f5dba7ff44c1f913c9436940fd7a405eba21525b54aefa",
            "file": "src/app/features/support/components/faq-list/faq-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-faq-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./faq-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-faq-list',\n  imports: [],\n  templateUrl: './faq-list.component.html',\n  styleUrl: './faq-list.component.scss'\n})\nexport class FaqListComponent {\n\n}\n",
            "styleUrl": "./faq-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>faq-list works!</p>\n"
        },
        {
            "name": "FilterInputComponent",
            "id": "component-FilterInputComponent-5f72545bbca1558fc6026251b1b48392ab0d24874e1e949d0e2dfe5569af1e09ec8cde3637a769ed95d19e7e27655382ce49e68fb0bd0c9725a8e0a01c24bb48",
            "file": "src/app/shared/filter-input/filter-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filter-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-input',\n  imports: [],\n  templateUrl: './filter-input.component.html',\n  styleUrl: './filter-input.component.scss'\n})\nexport class FilterInputComponent {\n\n}\n",
            "styleUrl": "./filter-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>filter-input works!</p>\n"
        },
        {
            "name": "FilterInputComponent",
            "id": "component-FilterInputComponent-5f72545bbca1558fc6026251b1b48392ab0d24874e1e949d0e2dfe5569af1e09ec8cde3637a769ed95d19e7e27655382ce49e68fb0bd0c9725a8e0a01c24bb48-1",
            "file": "src/app/shared/ui/filter-input/filter-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filter-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-input',\n  imports: [],\n  templateUrl: './filter-input.component.html',\n  styleUrl: './filter-input.component.scss'\n})\nexport class FilterInputComponent {\n\n}\n",
            "styleUrl": "./filter-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FilterInputComponent-1",
            "templateData": "<p>filter-input works!</p>\n"
        },
        {
            "name": "FilterSelectComponent",
            "id": "component-FilterSelectComponent-3d3c285acd5b3cd7334d857cdd3f90070e47c2dff81b1b0c7a09f976139cf282e7e58de62132eceacb78ec7fbfe846f8381ad9c4113efdb90ac66bc4af96724a",
            "file": "src/app/shared/filter-select/filter-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filter-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-select',\n  imports: [],\n  templateUrl: './filter-select.component.html',\n  styleUrl: './filter-select.component.scss'\n})\nexport class FilterSelectComponent {\n\n}\n",
            "styleUrl": "./filter-select.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>filter-select works!</p>\n"
        },
        {
            "name": "FilterSelectComponent",
            "id": "component-FilterSelectComponent-3d3c285acd5b3cd7334d857cdd3f90070e47c2dff81b1b0c7a09f976139cf282e7e58de62132eceacb78ec7fbfe846f8381ad9c4113efdb90ac66bc4af96724a-1",
            "file": "src/app/shared/ui/filter-select/filter-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./filter-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-filter-select',\n  imports: [],\n  templateUrl: './filter-select.component.html',\n  styleUrl: './filter-select.component.scss'\n})\nexport class FilterSelectComponent {\n\n}\n",
            "styleUrl": "./filter-select.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "FilterSelectComponent-1",
            "templateData": "<p>filter-select works!</p>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-e34d7d67b6c883433fea4a2b464caefc074112c08f5c5755fe0abdf160cfabe162fb86ad239a139043798367a9f6b2b21e079578e7df7b66767c5795ad5ad91f-1",
            "file": "src/app/shared/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  imports: [],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n\n}\n",
            "styleUrl": "./header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<p>header works!</p>\n"
        },
        {
            "name": "InspectionsPageComponent",
            "id": "component-InspectionsPageComponent-96fe6ed1ea7ccbbe1c1fe75224c5d49d097133ff8f8f70d3237ce09454ea4e1351bce65d6068e9d16bf6811e86ccafcc7d28745365590364a3753b499c4f5b44",
            "file": "src/app/features/inspections/pages/inspections-page/inspections-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-inspections-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./inspections-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-inspections-page',\n  imports: [],\n  templateUrl: './inspections-page.component.html',\n  styleUrl: './inspections-page.component.scss'\n})\nexport class InspectionsPageComponent {\n\n}\n",
            "styleUrl": "./inspections-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>inspections-page works!</p>\n"
        },
        {
            "name": "InspectionTableComponent",
            "id": "component-InspectionTableComponent-c155279ad0f5658ccb6d9a0b427acba23037f35329695b3cb8c3b683704db3ade149dc194545ab6f8317152e5ddbe8441351f9df351272b45871261f455d35b6",
            "file": "src/app/features/inspections/components/inspection-table/inspection-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-inspection-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./inspection-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-inspection-table',\n  imports: [],\n  templateUrl: './inspection-table.component.html',\n  styleUrl: './inspection-table.component.scss'\n})\nexport class InspectionTableComponent {\n\n}\n",
            "styleUrl": "./inspection-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>inspection-table works!</p>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-992e547e92eb08677be323fd4234d141f8f39bdf6996d2f8917e8f3cf26a7c208f73cf80f0a431e12ed3717347bba60bbc528fa2b72b1d19cf0afcf3dfa699b5",
            "file": "src/app/features/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "auth",
                    "defaultValue": "inject(AuthService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "errorMsg",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RouterModule, Router } from '@angular/router';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  errorMsg = '';\n\n  private readonly fb = inject(FormBuilder);\n  private readonly auth = inject(AuthService);\n  private readonly router = inject(Router);\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    const { email, password } = this.loginForm.value;\n    this.auth.login(email, password).subscribe({\n      next: () => this.router.navigate(['/dashboard']),\n      error: () => this.errorMsg = 'Identifiants invalides'\n    });\n\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"variables\" as *;\n\n.login-container {\n  max-width: 400px;\n  margin: 50px auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n}\n.error {\n  color: red;\n  margin-top: 10px;\n}",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <input\n    id=\"email\"\n    formControlName=\"email\"\n    placeholder=\"Email\"\n    required\n  />\n\n  <input\n    id=\"password\"\n    formControlName=\"password\"\n    type=\"password\"\n    placeholder=\"Mot de passe\"\n    required\n  />\n\n  <button type=\"submit\" [disabled]=\"loginForm.invalid\">\n    Se connecter\n  </button>\n\n  <!-- Le sélecteur .error doit correspondre au test Cypress -->\n  <div *ngIf=\"errorMsg\" class=\"error\">\n    Identifiants invalides\n  </div>\n</form>\n"
        },
        {
            "name": "OfflineBadgeComponent",
            "id": "component-OfflineBadgeComponent-7e42d4eeb29a7834b3ea011bb36a27eba6d8a9ae3b4e855bb34d376b5fa22802b3e5404ff879845a83764caff37333380aee2e0e07766172527fbb4fc72d3b08",
            "file": "src/app/shared/offline-badge/offline-badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-offline-badge",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./offline-badge.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-offline-badge',\n  imports: [],\n  templateUrl: './offline-badge.component.html',\n  styleUrl: './offline-badge.component.scss'\n})\nexport class OfflineBadgeComponent {\n\n}\n",
            "styleUrl": "./offline-badge.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>offline-badge works!</p>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PartnersPageComponent",
            "id": "component-PartnersPageComponent-4bd4ad7d15c9e0be3658abb871313e3a1776f42a5c7e262cde6a1874539bf4cb182ae136521363e344e098a1264600a0b8c824390aba1372124eca386c45c9d9",
            "file": "src/app/features/partners/pages/partners-page/partners-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-partners-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./partners-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-partners-page',\n  imports: [],\n  templateUrl: './partners-page.component.html',\n  styleUrl: './partners-page.component.scss'\n})\nexport class PartnersPageComponent {\n\n}\n",
            "styleUrl": "./partners-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>partners-page works!</p>\n"
        },
        {
            "name": "PartnerTableComponent",
            "id": "component-PartnerTableComponent-6d271ac3d2be00f12d83cee6765259642b6d9ef9fb48b91f9b045faca91e9a35618977b6b324b1ea8e74c20dd720d3559dc3691c9fb5cf60c72e612216c67d87",
            "file": "src/app/features/partners/components/partner-table/partner-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-partner-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./partner-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-partner-table',\n  imports: [],\n  templateUrl: './partner-table.component.html',\n  styleUrl: './partner-table.component.scss'\n})\nexport class PartnerTableComponent {\n\n}\n",
            "styleUrl": "./partner-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>partner-table works!</p>\n"
        },
        {
            "name": "ReportButtonsComponent",
            "id": "component-ReportButtonsComponent-d1bf60be576d41bdb8ca750906277b2854402ccdf15f86f324a59c8c07f9fc3d953591a39c841275cf6f3553ffb1a27dbfbe7b4e834297cbe66b0f8492fb4163",
            "file": "src/app/features/reports/components/report-buttons/report-buttons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-report-buttons",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./report-buttons.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-report-buttons',\n  imports: [],\n  templateUrl: './report-buttons.component.html',\n  styleUrl: './report-buttons.component.scss'\n})\nexport class ReportButtonsComponent {\n\n}\n",
            "styleUrl": "./report-buttons.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>report-buttons works!</p>\n"
        },
        {
            "name": "ReportsPageComponent",
            "id": "component-ReportsPageComponent-a9ecf30ff10ad73a81ebfaeccc72f15ab242f9225e586ed02b8534cbf0063a9867ac64612caaee8872b00e81d1962a53e9e3a545663e83d1d9223b7ad955dbe2",
            "file": "src/app/features/reports/pages/reports-page/reports-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reports-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./reports-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-reports-page',\n  imports: [],\n  templateUrl: './reports-page.component.html',\n  styleUrl: './reports-page.component.scss'\n})\nexport class ReportsPageComponent {\n\n}\n",
            "styleUrl": "./reports-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>reports-page works!</p>\n"
        },
        {
            "name": "ScoreboardPageComponent",
            "id": "component-ScoreboardPageComponent-45202998d85e874c1699c8ec9787476f5547a0c3cde8357ff0c5eeea570e45142eeb2ea4c8251c01380c3e3c77e2a54a9691099b1acceae0d4896398ac48ebe0",
            "file": "src/app/features/scoreboard/pages/scoreboard-page/scoreboard-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scoreboard-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./scoreboard-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-scoreboard-page',\n  imports: [],\n  templateUrl: './scoreboard-page.component.html',\n  styleUrl: './scoreboard-page.component.scss'\n})\nexport class ScoreboardPageComponent {\n\n}\n",
            "styleUrl": "./scoreboard-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>scoreboard-page works!</p>\n"
        },
        {
            "name": "ScoreboardTableComponent",
            "id": "component-ScoreboardTableComponent-f2b831419a1b0492da6a1e21321de70354459828060351244cb2042818f182e7ebb56113623dd3636954194570d04cb4cc774a0d08784a7b38d78e3f93fcabe4",
            "file": "src/app/features/scoreboard/components/scoreboard-table/scoreboard-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-scoreboard-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./scoreboard-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-scoreboard-table',\n  imports: [],\n  templateUrl: './scoreboard-table.component.html',\n  styleUrl: './scoreboard-table.component.scss'\n})\nexport class ScoreboardTableComponent {\n\n}\n",
            "styleUrl": "./scoreboard-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>scoreboard-table works!</p>\n"
        },
        {
            "name": "SearchInputComponent",
            "id": "component-SearchInputComponent-6bf4b1945b14e534752f95565488e7b72cfd2a1bd618f2e9cf0fc229f29e2b1512cd46e532381811bf3a5ad770ae26c7f1168d84000e6422afd409f44664c918",
            "file": "src/app/shared/search-input/search-input/search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search-input",
            "styleUrls": [],
            "styles": [],
            "template": "<input\n  type=\"text\"\n  placeholder=\"Filtrer…\"\n  class=\"border rounded px-2 py-1 w-full mb-3\"\n  (input)=\"onInput($event)\">\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "searchChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onInput",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-search-input',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <input\n      type=\"text\"\n      placeholder=\"Filtrer…\"\n      class=\"border rounded px-2 py-1 w-full mb-3\"\n      (input)=\"onInput($event)\">\n  `\n})\nexport class SearchInputComponent {\n  @Output() searchChange = new EventEmitter<string>();\n\n  onInput(e: Event) {\n    this.searchChange.emit((e.target as HTMLInputElement).value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "SettingsFormComponent",
            "id": "component-SettingsFormComponent-87474b7c519407b14537a25669da5684864bacf668fe65c8620e925f2f0726da8380640dbb0141a2497ab2414bb3df6c607bb05d7a20b8fa42601d36d6362c15",
            "file": "src/app/features/settings/components/settings-form/settings-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-settings-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./settings-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-form',\n  imports: [],\n  templateUrl: './settings-form.component.html',\n  styleUrl: './settings-form.component.scss'\n})\nexport class SettingsFormComponent {\n\n}\n",
            "styleUrl": "./settings-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>settings-form works!</p>\n"
        },
        {
            "name": "SettingsPageComponent",
            "id": "component-SettingsPageComponent-1caf6ca578195cc0ae40f89338b7ec30b46a6e455cfe4363371031f9be9c36d98885790ff9c95d92af1903e2604dbc4c48247a45f2b7ed7862b706fce99d0de8",
            "file": "src/app/features/settings/pages/settings-page/settings-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-settings-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./settings-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-page',\n  imports: [],\n  templateUrl: './settings-page.component.html',\n  styleUrl: './settings-page.component.scss'\n})\nexport class SettingsPageComponent {\n\n}\n",
            "styleUrl": "./settings-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>settings-page works!</p>\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-d54266a5214f06562aa088d1e7741b749b8906a3ad892d745f620301982a88bf086438ce206a0676fea9e88c1bbdb518a0269944f22ad4ab58fa1255948ab5e1",
            "file": "src/app/shared/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  imports: [],\n  templateUrl: './sidebar.component.html',\n  styleUrl: './sidebar.component.scss'\n})\nexport class SidebarComponent {\n\n}\n",
            "styleUrl": "./sidebar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>sidebar works!</p>\n"
        },
        {
            "name": "SiteFilterComponent",
            "id": "component-SiteFilterComponent-d922151a7b2d77b627ba6976820bd3b7595b205cc64676b0ea141c46d7b05f185eaceafe679d94682b825a5c2f96fc87366b803c09fd72c46bcb6b25270a379a",
            "file": "src/app/features/sites/components/site-filter/site-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-site-filter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./site-filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-site-filter',\n  imports: [],\n  templateUrl: './site-filter.component.html',\n  styleUrl: './site-filter.component.scss'\n})\nexport class SiteFilterComponent {\n\n}\n",
            "styleUrl": "./site-filter.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>site-filter works!</p>\n"
        },
        {
            "name": "SitesPageComponent",
            "id": "component-SitesPageComponent-4d396385462ac8c811a78172b9e9e4401768f12bb14b2b473506a5a1ef2bbaf1d0cfe1897c85b86de9dbd408b96da2114ab573224245b5b89a260f6b7b9eb2ce",
            "file": "src/app/features/sites/pages/sites-page/sites-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sites-page",
            "styleUrls": [
                "./sites-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sites-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sites$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Site[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit }     from '@angular/core';\nimport { Observable }             from 'rxjs';\nimport { Site }                   from '../../../../models/site.model';\nimport { SitesService }           from '../../sites.service';\n\n@Component({\n  selector: 'app-sites-page',\n  templateUrl: './sites-page.component.html',\n  styleUrls: ['./sites-page.component.scss']\n})\nexport class SitesPageComponent implements OnInit {\n  sites$!: Observable<Site[]>;\n\n  constructor(private sitesService: SitesService) {}\n\n  ngOnInit() {\n    this.sites$ = this.sitesService.getAll();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"variables\" as *;\n",
                    "styleUrl": "./sites-page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sitesService",
                        "type": "SitesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "sitesService",
                        "type": "SitesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>sites-page works!</p>\n"
        },
        {
            "name": "SiteTableComponent",
            "id": "component-SiteTableComponent-f2d253945777a6386542e137a7f601d50cd407fd5304a67e46b4dbecbae231e1a59f7f891bb08375c9c438ce2af98492bb7366278c7899b12ce786b4b09e795b",
            "file": "src/app/features/sites/components/site-table/site-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-site-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./site-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-site-table',\n  imports: [],\n  templateUrl: './site-table.component.html',\n  styleUrl: './site-table.component.scss'\n})\nexport class SiteTableComponent {\n\n}\n",
            "styleUrl": "./site-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>site-table works!</p>\n"
        },
        {
            "name": "SkeletonComponent",
            "id": "component-SkeletonComponent-da0fe0406851796da48426becde5e379343175909371070f9b06b41e48baa9dc9502775008a5320e2a76c3eff87d328c8c27ba762861aa5f420d37b6e3619817",
            "file": "src/app/shared/skeleton/skeleton/skeleton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-skeleton",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngStyle]=\"{height} \"           class=\"animate-pulse bg-slate-200 rounded w-full\"></div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "height",
                    "defaultValue": "'2rem'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-skeleton',\n  standalone: true,\n  imports: [CommonModule],\n  template: `<div [ngStyle]=\"{height} \"\n           class=\"animate-pulse bg-slate-200 rounded w-full\"></div>`\n})\nexport class SkeletonComponent {\n  @Input() height = '2rem';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "SkeletonLoaderComponent",
            "id": "component-SkeletonLoaderComponent-103fe3bd5e2ff823bb0777be789ec9552f2e200f31c6503b2a9bcacd4a573af262c4f340c1f71fd0b435bf311e3d296fc2ac260e822f6af2371b0144d06cb44d",
            "file": "src/app/shared/skeleton-loader/skeleton-loader/skeleton-loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-skeleton",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"animate-pulse bg-slate-200 h-4 w-full rounded mb-2\"></div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-skeleton',\n  standalone: true,           // 👈 ajoutez-ça\n  template: `<div class=\"animate-pulse bg-slate-200 h-4 w-full rounded mb-2\"></div>`,\n  styles: []\n})\nexport class SkeletonLoaderComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "StatCardComponent",
            "id": "component-StatCardComponent-6bcc8a0fad1f83f8a3bbd5ac0750e031014c830cecde19d70235eb340f1f83cc5cfd2ec8a7d9705112d87316ddb63c43ae5fa1bbbbd32d11a59592726da91ed8",
            "file": "src/app/features/dashboard/components/stat-card/stat-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stat-card",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"p-4 rounded-xl shadow text-white\"\n     [ngClass]=\"{ 'bg-primary': !stat.variant, 'bg-danger': stat.variant==='risk' }\">\n\n  <div class=\"flex items-center gap-2 text-sm opacity-80\">\n    <lucide-icon *ngIf=\"stat.icon\"\n                 [name]=\"stat.icon\"\n                 class=\"w-4 h-4\"></lucide-icon>\n    {{ stat.label }}\n  </div>\n\n  <div class=\"text-2xl font-bold mt-1\">{{ stat.value }}</div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "stat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "DashboardStat",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "LucideAngularModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input }    from '@angular/core';\nimport { CommonModule }        from '@angular/common';\nimport { LucideAngularModule } from 'lucide-angular';\nimport { DashboardStat }       from '../../../../models/dashboard-stat.model';\n\n@Component({\n  selector: 'app-stat-card',\n  standalone: true,\n  imports: [CommonModule, LucideAngularModule],\n  template: `\n    <div class=\"p-4 rounded-xl shadow text-white\"\n         [ngClass]=\"{ 'bg-primary': !stat.variant, 'bg-danger': stat.variant==='risk' }\">\n\n      <div class=\"flex items-center gap-2 text-sm opacity-80\">\n        <lucide-icon *ngIf=\"stat.icon\"\n                     [name]=\"stat.icon\"\n                     class=\"w-4 h-4\"></lucide-icon>\n        {{ stat.label }}\n      </div>\n\n      <div class=\"text-2xl font-bold mt-1\">{{ stat.value }}</div>\n    </div>\n  `\n})\nexport class StatCardComponent {\n  @Input() stat!: DashboardStat;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "SupportPageComponent",
            "id": "component-SupportPageComponent-75a5c6fa292ab72c8555aa1f9facd7d9da5bfc19161af0a8e8b1eda8d8feb8914717c88ce5c3d00c8ff822598b096a916795f4e9aa0bc24d302bf787b3829868",
            "file": "src/app/features/support/pages/support-page/support-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-support-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./support-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-support-page',\n  imports: [],\n  templateUrl: './support-page.component.html',\n  styleUrl: './support-page.component.scss'\n})\nexport class SupportPageComponent {\n\n}\n",
            "styleUrl": "./support-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>support-page works!</p>\n"
        },
        {
            "name": "TableWrapperComponent",
            "id": "component-TableWrapperComponent-635fd1e794972b9f6ddffb9d5e012ffdbc20c0e3d20966625507ba9a611f07c5d51a7f212b30c5bbd4866768973b3d2e233fd29727ab8cc312457e92d4256936",
            "file": "src/app/shared/table-wrapper/table-wrapper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"overflow-x-auto border rounded-xl\"><ng-content></ng-content></div>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-table-wrapper',\n  standalone: true,\n  imports: [CommonModule],\n  template: `<div class=\"overflow-x-auto border rounded-xl\"><ng-content></ng-content></div>`\n})\nexport class TableWrapperComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "TableWrapperComponent",
            "id": "component-TableWrapperComponent-441e30641d1841a5c53a2e7e2fd9491d3e7ec6ae54aed80dff0547e49df034fa44aa819fe99606c9999322b308b972002334b568fce6a1edbf4caa3b7723a896-1",
            "file": "src/app/shared/ui/table-wrapper/table-wrapper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-wrapper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table-wrapper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-table-wrapper',\n  imports: [],\n  templateUrl: './table-wrapper.component.html',\n  styleUrl: './table-wrapper.component.scss'\n})\nexport class TableWrapperComponent {\n\n}\n",
            "styleUrl": "./table-wrapper.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TableWrapperComponent-1",
            "templateData": "<p>table-wrapper works!</p>\n"
        },
        {
            "name": "TrainingListItemComponent",
            "id": "component-TrainingListItemComponent-4b1c0822eec38327599aac0489b7d683985753ae7ebe001039b17468cdf2970811b30c171d455cd140a4474e0e2e6fa8ff9123f85f0079a3b00bda01b5c5a908",
            "file": "src/app/features/training/components/training-list-item/training-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-training-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./training-list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-training-list-item',\n  imports: [],\n  templateUrl: './training-list-item.component.html',\n  styleUrl: './training-list-item.component.scss'\n})\nexport class TrainingListItemComponent {\n\n}\n",
            "styleUrl": "./training-list-item.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>training-list-item works!</p>\n"
        },
        {
            "name": "TrainingPageComponent",
            "id": "component-TrainingPageComponent-7c9e5fe2e86764bf2ba16af124ad0ee98ae681915085af1426b5dae82ae267db2adc287e2a769debd7ead813b976f3eb70db003ba31890397d7d058a9e3ec04a",
            "file": "src/app/features/training/pages/training-page/training-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-training-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./training-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-training-page',\n  imports: [],\n  templateUrl: './training-page.component.html',\n  styleUrl: './training-page.component.scss'\n})\nexport class TrainingPageComponent {\n\n}\n",
            "styleUrl": "./training-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>training-page works!</p>\n"
        },
        {
            "name": "WorkersPageComponent",
            "id": "component-WorkersPageComponent-130b0e3a9e036068ec563c8379e98ac811e534d8d347a79306d680881dd9982fa7f66a8064faaaa04b6d35d8af1b10aa9e25318a1bc1172c3966466a974f8b3b",
            "file": "src/app/features/workers/pages/workers-page/workers-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-workers-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./workers-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-workers-page',\n  imports: [],\n  templateUrl: './workers-page.component.html',\n  styleUrl: './workers-page.component.scss'\n})\nexport class WorkersPageComponent {\n\n}\n",
            "styleUrl": "./workers-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>workers-page works!</p>\n"
        },
        {
            "name": "WorkerTableComponent",
            "id": "component-WorkerTableComponent-e6701899daf50536114b10257f7bd83b69ace120529dfa946732ab2535763ea2d994dd215eff59b54bcb3a934d8b2052f364185eb37d045d751ff047edcd478e",
            "file": "src/app/features/workers/components/worker-table/worker-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-worker-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./worker-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-worker-table',\n  imports: [],\n  templateUrl: './worker-table.component.html',\n  styleUrl: './worker-table.component.scss'\n})\nexport class WorkerTableComponent {\n\n}\n",
            "styleUrl": "./worker-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>worker-table works!</p>\n"
        }
    ],
    "modules": [
        {
            "name": "ActionsModule",
            "id": "module-ActionsModule-d56be4bb0b99933058ededf7f0826f67aeb504815011da05686d22170a0b8737045572c2c4f02854353a6dbbafb17499a35c6f7392f47b2b6c1668e316a97888",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/actions/actions.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './actions.route';\nimport { SharedModule }  from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ActionsModule {}\n\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AiModule",
            "id": "module-AiModule-c52cd666775a3ee8444bd4e6a7fb9b0c2215e89c27d03c1a5024ee72bab6c4bdde234bc36d910af9db4ad0c378aee58c8f0d6f106b39a8a5faf9dda321467957",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/ai/ai.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './ai.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { AiPageComponent } from './pages/ai-page/ai-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    AiPageComponent\n\n  ]\n})\nexport class AiModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AiPageComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AlertsModule",
            "id": "module-AlertsModule-0fb06457a358e36e9011f1685fdae0c46b70f7251e9598391ec9c8114b99407fe2a4f783aeaa2ac97f4b512470e21b644be7f1ac66815d5a010b0bbac8f78d97",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/alerts/alerts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './alerts.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { AlertsPageComponent } from './pages/alerts-page/alerts-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    AlertsPageComponent\n  ]\n})\nexport class AlertsModule { }\n// This module sets up the Alerts feature in the Angular application.",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AlertsPageComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-f3b9b96da2ab88b3d362fc84f6d721da5cb88c8e65642a0762e91832a097d6d1942fc9f099dc6170d0e76bb9151e24d8702b78735828dd2829a4f09b16531767",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "\nimport { NgModule }          from '@angular/core';\nimport { BrowserModule }     from '@angular/platform-browser';\nimport { RouterModule }      from '@angular/router';\nimport { routes }            from './app.routes';\nimport { CoreModule }        from './core/core.module';\nimport { SharedModule }      from './shared/shared.module';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CoreModule,\n    SharedModule,\n    RouterModule.forRoot(routes)\n  ],\n  bootstrap: [/* AppComponent */]\n})\n\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CompanyModule",
            "id": "module-CompanyModule-1630390580aad955abc3056bd6df8c2035a04ea49916eba7ea63f769ce4ce56998406b0b1c8dd4ff660305853bbfaa3ce74f71cb5b480e5159c71a7c82ca2ba9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/company/company.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './company.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { CompanyPageComponent } from './pages/company-page/company-page.component'\nimport { CertificationTableComponent } from './components/certification-table/certification-table.component'\nimport { ExtinguisherTableComponent } from './components/extinguisher-table/extinguisher-table.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    CompanyPageComponent,\n    CertificationTableComponent,\n    ExtinguisherTableComponent\n  ]\n})\n\nexport class CompanyModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CertificationTableComponent"
                        },
                        {
                            "name": "CompanyPageComponent"
                        },
                        {
                            "name": "ExtinguisherTableComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-b28211cf6cc667233939898adca1bbe03f751bc4673b74a66b3ddaf417f0207cdde9374b03419adb539d7a504fe23e52d48a7b0171eecf8b16849ee644bdb7a3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/core.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardModule",
            "id": "module-DashboardModule-e177614ee277ca5114834021a7df726a5bb0d5c3fe4e053a28616e2a194fd881994ee2562eae09e55d09645c79fc2d76d771161b355061ab7f7ac0d3f5374510",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/dashboard/dashboard.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './dashboard.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { DashboardPageComponent } from './pages/dashboard-page/dashboard-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    DashboardPageComponent,\n  ]\n})\nexport class DashboardModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DashboardPageComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EquipmentsModule",
            "id": "module-EquipmentsModule-3b6572d3e97e4dc5098a88d5a12970cba84e3880288a811170e38a7e131f4063c30a3978e494bdb2d648887b5c685bfae2248cdaf4356b521e7407eb67eecfd8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/equipments/equipments.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './equipments.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { EquipmentsPageComponent } from './pages/equipments-page/equipments-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    EquipmentsPageComponent\n  ]\n})\n\nexport class EquipmentsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "EquipmentsPageComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "EsgModule",
            "id": "module-EsgModule-a9ac01126ebf39d587a95a7f2587f079ba92e428bd59908bb21e8665994836276ba494caccd88d4087003cdfd3bf22cf89cd40e5db04462435a39467a4b76900",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/esg/esg.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './esg.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { EsgPageComponent } from './pages/esg-page/esg-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    EsgPageComponent\n  ]\n})\n\nexport class EsgModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "EsgPageComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconsModule",
            "id": "module-IconsModule-1d335ee353a91d4ed92d39e32bb83a36159e9a42fa4608a77d32f7fcdfcb28ab8b1f5c55a2e75175fa4028900419bed37e87506382976d859953e53e65642d62",
            "description": "<p>Module partageant uniquement les icônes nécessaires à l’app.</p>\n",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/icons/icons.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport {\n  LucideAngularModule,\n  Check,\n  Clock,\n  AlertTriangle,\n  X,\n} from 'lucide-angular';\n\n/**\n * Module partageant uniquement les icônes nécessaires à l’app.\n */\n@NgModule({\n  imports: [\n    LucideAngularModule.pick({\n      Check,\n      Clock,\n      AlertTriangle,\n      X,\n    }),\n  ],\n  exports: [LucideAngularModule],\n})\nexport class IconsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InspectionsModule",
            "id": "module-InspectionsModule-aaf57a5361472466f6c6f8745b36d9f6019890002142184d6ad5ef48c81d542c24d9cf639b88fe7386d4c288b6b3f8c1fcd67c0e11ef2bce47f6c7960796b502",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/inspections/inspections.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './inspections.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { InspectionsPageComponent } from './pages/inspections-page/inspections-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    InspectionsPageComponent\n  ]\n})\n\nexport class InspectionsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "InspectionsPageComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PartnersModule",
            "id": "module-PartnersModule-0a160c2cc23a9f34c54e5ebb5bd539c02ab1aa7de00a4c668389a8cfeb594870375d10f60516d602c2345280982711138446456a32fd65ccf91ca0a1d7a4d8d0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/partners/partners.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './partners.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { PartnersPageComponent } from './pages/partners-page/partners-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    PartnersPageComponent\n  ]\n})\n\nexport class PartnersModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PartnersPageComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ReportsModule",
            "id": "module-ReportsModule-3ab2ef98edb751b0163569566fbae31b5d41c4cd3ed8e673a3056406e51a3cc0412285fba2fe5cd1f095f18e46eb96e44a61bef50f12684b09d1d018d036ebc9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/reports/reports.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './reports.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { ReportsPageComponent } from './pages/reports-page/reports-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    ReportsPageComponent\n  ]\n})\n\nexport class ReportsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ReportsPageComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ScoreboardModule",
            "id": "module-ScoreboardModule-4de51b22ae79eacd433c663a0c1833dc6ffb0b313f8275d1b31f7a43fd590c0c40503da8f5a6bc9ceb395b29c20bd11c5841c6198c0a62c4f5e7d5a5e02518ca",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/scoreboard/scoreboard.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './scoreboard.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { ScoreboardPageComponent } from './pages/scoreboard-page/scoreboard-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    ScoreboardPageComponent\n  ]\n})\n\nexport class ScoreboardModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ScoreboardPageComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SettingsModule",
            "id": "module-SettingsModule-bcb936b4e9f1f82b89c9172a16e07ad77ef0b9a2d844cb1b93ae6dff69b411bf4d781af4ea21ea587a1590e60ce7f241d55855707b3ee017841fceec0fb8f58e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/settings/settings.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './settings.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { SettingsPageComponent } from './pages/settings-page/settings-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    SettingsPageComponent\n  ]\n})\n\nexport class SettingsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SettingsPageComponent"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-183ede447108eea17d98ca2ab008f39499b128ca0894b75a50655364fb41afe822dfad5c8cf2731faa39ac4dcfaf5c3b954b9786de22296de915fd9a3a41c3ec",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SitesModule",
            "id": "module-SitesModule-fbcc34148cc1f6196e59962ba5972ab33058d82944bcacd9efedc3de2e11ca8537f8f0c259265de1320cb90d8b6f0b8c1cb889df53e0e45724959d963d1461b5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/sites/sites.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './sites.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { SitesPageComponent } from './pages/sites-page/sites-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    SitesPageComponent\n  ]\n})\n\nexport class SitesModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "SitesPageComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StylesModule",
            "id": "module-StylesModule-da0b75d734bc2cc8b8b05f903865eae759936d984a1c6fc8c5ee19cb3a26aa6a9a094d6cb11212859315fb8118b93f35c203324e72ab3466c87ea219f851d8fd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/styles/styles.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class StylesModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SupportModule",
            "id": "module-SupportModule-a94f78b5c3fc044a0b91d95b41b1c874c913f57daf3c60f1a27d9298340c87fe54c105f117c093040622f24634ec8b1f54e77831e6b8744b4daa54522b4894ee",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/support/support.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './support.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { SupportPageComponent } from './pages/support-page/support-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    SupportPageComponent\n  ]\n})\n\nexport class SupportModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "SupportPageComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TrainingModule",
            "id": "module-TrainingModule-2da11668af930548d3d5c7d4f0ab1b2533bf9ec3e7cbfb96f654f0f3af990a0896366e91016579a2c541a400cb15e5e44a787a5f5677ed73c32ac27fec2222bc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/training/training.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './training.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { TrainingPageComponent } from './pages/training-page/training-page.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    TrainingPageComponent\n  ]\n})\n\nexport class TrainingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "TrainingPageComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiModule",
            "id": "module-UiModule-b3625524179cc0a9956e3d9bad8cdffc8af34ca9b2b2879be27dd710845cf77659016bc432208b8ce31a184cac262253cfc28047ddddae09d4b39799c7058f35",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/ui/ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class UiModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WorkersModule",
            "id": "module-WorkersModule-20458d5ab111b3f17ad9a75887772991b92f69b05174fc6d0bfc32fcbd9f951693b0ee4295b6a3e8d385fa834ca718079e54b0f83baef2c9b537bf9576462093",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/workers/workers.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { RouterModule }  from '@angular/router';\nimport { routes }        from './workers.route';\nimport { SharedModule }  from '../../shared/shared.module';\nimport { WorkersPageComponent } from './pages/workers-page/workers-page.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    WorkersPageComponent\n  ]\n})\n\nexport class WorkersModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "WorkersPageComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "apiInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/api.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\n  return next(req);\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }), \n    provideRouter(routes),\n    provideHttpClient(withInterceptors([authInterceptorFn]))\n  ]\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "() => {\n  const auth = inject(AuthService);\n  const router = inject(Router);\n\n  if (!auth.isLoggedIn()) {\n    router.navigate(['/login']);\n    return false;\n  }\n  return true;\n}"
            },
            {
                "name": "authInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/interceptors/auth.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(\n  req: HttpRequest<unknown>,\n  next: HttpHandlerFn\n): Observable<HttpEvent<unknown>> => {\n  // Récupère ton token depuis un service\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n\n  // Clone la requête en ajoutant le header Authorization\n  const authReq = req.clone({\n    headers: req.headers.set('Authorization', `Bearer ${token}`)\n  });\n\n  return next(authReq);\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:8000',   // <- port uvicorn\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:8000',   // <- port uvicorn\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/core/api.interceptor.ts": [
                {
                    "name": "apiInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/api.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\n  return next(req);\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }), \n    provideRouter(routes),\n    provideHttpClient(withInterceptors([authInterceptorFn]))\n  ]\n}"
                }
            ],
            "src/app/core/guards/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "() => {\n  const auth = inject(AuthService);\n  const router = inject(Router);\n\n  if (!auth.isLoggedIn()) {\n    router.navigate(['/login']);\n    return false;\n  }\n  return true;\n}"
                }
            ],
            "src/app/core/interceptors/auth.interceptor.ts": [
                {
                    "name": "authInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/interceptors/auth.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(\n  req: HttpRequest<unknown>,\n  next: HttpHandlerFn\n): Observable<HttpEvent<unknown>> => {\n  // Récupère ton token depuis un service\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n\n  // Clone la requête en ajoutant le header Authorization\n  const authReq = req.clone({\n    headers: req.headers.set('Authorization', `Bearer ${token}`)\n  });\n\n  return next(authReq);\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:8000',   // <- port uvicorn\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:8000',   // <- port uvicorn\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/api.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "apiInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/auth.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/checklist.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Checklist",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "src/app/core/models/checklist.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ChecklistItem",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "src/app/core/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/auth.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/checklist-item.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ChecklistItemService",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "src/app/core/services/checklist-item.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/checklist.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ChecklistService",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/title.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TitleService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shell/app-shell/app-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/actions/actions.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ActionsService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/actions/components/action-list-item/action-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/actions/pages/actions-page/actions-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/ai/ai.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AiService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/ai/components/ai-chat/ai-chat.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AiChatComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/ai/components/ai-upload/ai-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AiUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/ai/pages/ai-page/ai-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AiPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/alerts/alerts.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AlertsService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/alerts/components/alert-card/alert-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/alerts/pages/alerts-page/alerts-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/features/checklists/checklist-detail/checklist-detail/checklist-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChecklistDetailComponent",
                "coveragePercent": 36,
                "coverageCount": "4/11",
                "status": "medium"
            },
            {
                "filePath": "src/app/features/checklists/checklist-form/checklist-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChecklistFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/checklists/checklist-list/checklist-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChecklistListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/checklists/checklists-page/checklists-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChecklistsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/company/company.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CompanyService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/company/components/certification-table/certification-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CertificationTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/features/company/components/extinguisher-table/extinguisher-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExtinguisherTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/features/company/pages/company-page/company-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompanyPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/stat-card/stat-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/dashboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DashboardService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/pages/dashboard-page/dashboard-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/equipments/components/equipment-table/equipment-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EquipmentTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/equipments/equipments.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EquipmentsService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/equipments/pages/equipments-page/equipments-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EquipmentsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/esg/components/esg-table/esg-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EsgTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/esg/esg.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EsgService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/esg/pages/esg-page/esg-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EsgPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/inspections/components/inspection-table/inspection-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InspectionTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/inspections/inspections.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InspectionsService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/inspections/pages/inspections-page/inspections-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InspectionsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/partners/components/partner-table/partner-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PartnerTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/partners/pages/partners-page/partners-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PartnersPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/partners/partners.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PartnersService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/reports/components/report-buttons/report-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/reports/pages/reports-page/reports-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReportsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/reports/reports.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ReportsService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/scoreboard/components/scoreboard-table/scoreboard-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScoreboardTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/scoreboard/pages/scoreboard-page/scoreboard-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScoreboardPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/scoreboard/scoreboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ScoreboardService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/settings/components/settings-form/settings-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SettingsFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/settings/pages/settings-page/settings-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SettingsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/settings/settings.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SettingsService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/sites/components/site-filter/site-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SiteFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/sites/components/site-table/site-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SiteTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/sites/pages/sites-page/sites-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SitesPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/sites/sites.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SitesService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/support/components/faq-list/faq-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FaqListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/support/pages/support-page/support-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SupportPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/support/support.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SupportService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/training/components/training-list-item/training-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrainingListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/training/pages/training-page/training-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrainingPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/training/training.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TrainingService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/workers/components/worker-table/worker-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkerTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/workers/pages/workers-page/workers-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkersPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/workers/workers.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WorkersService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/models/action-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ActionItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/alert.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Alert",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/certification.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Certification",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/dashboard-stat.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DashboardStat",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/equipment.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Equipment",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/esg-metrics.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EsgMetrics",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/faq-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FaqItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/fire-extinguisher.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FireExtinguisher",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/inspection.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Inspection",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/partner.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Partner",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/report.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Report",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/scoreboard-entry.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ScoreboardEntry",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/site.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Site",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/training.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TrainingModule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/worker.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Worker",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/filter-input/filter-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/filter-select/filter-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/offline-badge/offline-badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfflineBadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/search-input/search-input/search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/skeleton-loader/skeleton-loader/skeleton-loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkeletonLoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/skeleton/skeleton/skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/table-wrapper/table-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui/filter-input/filter-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui/filter-select/filter-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/ui/table-wrapper/table-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}